!(function(e, t) {
"object" == typeof exports && "undefined" != typeof module
? (module.exports = t(require("three-full")))
: "function" == typeof define && define.amd
? define(["three-full"], t)
: (e.THREEDebugRenderTarget = t(e.THREE));
})(this, function(e) {
"use strict";
function t(e, t) {
return e((t = {exports: {}}), t.exports), t.exports;
}
e = e && e.hasOwnProperty("default") ? e.default : e;
var a = t(function(e, t) {
var a =
"undefined" != typeof Uint8Array &&
"undefined" != typeof Uint16Array &&
"undefined" != typeof Int32Array;
function r(e, t) {
return Object.prototype.hasOwnProperty.call(e, t);
}
(t.assign = function(e) {
for (var t = Array.prototype.slice.call(arguments, 1); t.length; ) {
var a = t.shift();
if (a) {
if ("object" != typeof a) throw new TypeError(a + "must be non-object");
for (var n in a) r(a, n) && (e[n] = a[n]);
}
}
return e;
}),
(t.shrinkBuf = function(e, t) {
return e.length === t ? e : e.subarray ? e.subarray(0, t) : ((e.length = t), e);
});
var n = {
arraySet: function(e, t, a, r, n) {
if (t.subarray && e.subarray) e.set(t.subarray(a, a + r), n);
else for (var i = 0; i < r; i++) e[n + i] = t[a + i];
},
flattenChunks: function(e) {
var t, a, r, n, i, s;
for (r = 0, t = 0, a = e.length; t < a; t++) r += e[t].length;
for (s = new Uint8Array(r), n = 0, t = 0, a = e.length; t < a; t++)
(i = e[t]), s.set(i, n), (n += i.length);
return s;
}
},
i = {
arraySet: function(e, t, a, r, n) {
for (var i = 0; i < r; i++) e[n + i] = t[a + i];
},
flattenChunks: function(e) {
return [].concat.apply([], e);
}
};
(t.setTyped = function(e) {
e
? ((t.Buf8 = Uint8Array),
  (t.Buf16 = Uint16Array),
  (t.Buf32 = Int32Array),
  t.assign(t, n))
: ((t.Buf8 = Array), (t.Buf16 = Array), (t.Buf32 = Array), t.assign(t, i));
}),
t.setTyped(a);
}),
r = (a.assign, a.shrinkBuf, a.setTyped, a.Buf8, a.Buf16, a.Buf32, 4),
n = 0,
i = 1,
s = 2;
function o(e) {
for (var t = e.length; --t >= 0; ) e[t] = 0;
}
var l = 0,
h = 1,
f = 2,
d = 29,
u = 256,
_ = u + 1 + d,
c = 30,
g = 19,
b = 2 * _ + 1,
w = 15,
v = 16,
p = 7,
m = 256,
k = 16,
y = 17,
x = 18,
z = [
0,
0,
0,
0,
0,
0,
0,
0,
1,
1,
1,
1,
2,
2,
2,
2,
3,
3,
3,
3,
4,
4,
4,
4,
5,
5,
5,
5,
0
],
A = [
0,
0,
0,
0,
1,
1,
2,
2,
3,
3,
4,
4,
5,
5,
6,
6,
7,
7,
8,
8,
9,
9,
10,
10,
11,
11,
12,
12,
13,
13
],
B = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7],
S = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
U = new Array(2 * (_ + 2));
o(U);
var E = new Array(2 * c);
o(E);
var R = new Array(512);
o(R);
var I = new Array(256);
o(I);
var T = new Array(d);
o(T);
var Z,
N,
C,
D = new Array(c);
function M(e, t, a, r, n) {
(this.static_tree = e),
(this.extra_bits = t),
(this.extra_base = a),
(this.elems = r),
(this.max_length = n),
(this.has_stree = e && e.length);
}
function L(e, t) {
(this.dyn_tree = e), (this.max_code = 0), (this.stat_desc = t);
}
function O(e) {
return e < 256 ? R[e] : R[256 + (e >>> 7)];
}
function q(e, t) {
(e.pending_buf[e.pending++] = 255 & t),
(e.pending_buf[e.pending++] = (t >>> 8) & 255);
}
function F(e, t, a) {
e.bi_valid > v - a
? ((e.bi_buf |= (t << e.bi_valid) & 65535),
  q(e, e.bi_buf),
  (e.bi_buf = t >> (v - e.bi_valid)),
  (e.bi_valid += a - v))
: ((e.bi_buf |= (t << e.bi_valid) & 65535), (e.bi_valid += a));
}
function P(e, t, a) {
F(e, a[2 * t], a[2 * t + 1]);
}
function H(e, t) {
var a = 0;
do {
(a |= 1 & e), (e >>>= 1), (a <<= 1);
} while (--t > 0);
return a >>> 1;
}
function j(e, t, a) {
var r,
n,
i = new Array(w + 1),
s = 0;
for (r = 1; r <= w; r++) i[r] = s = (s + a[r - 1]) << 1;
for (n = 0; n <= t; n++) {
var o = e[2 * n + 1];
0 !== o && (e[2 * n] = H(i[o]++, o));
}
}
function G(e) {
var t;
for (t = 0; t < _; t++) e.dyn_ltree[2 * t] = 0;
for (t = 0; t < c; t++) e.dyn_dtree[2 * t] = 0;
for (t = 0; t < g; t++) e.bl_tree[2 * t] = 0;
(e.dyn_ltree[2 * m] = 1),
(e.opt_len = e.static_len = 0),
(e.last_lit = e.matches = 0);
}
function K(e) {
e.bi_valid > 8
? q(e, e.bi_buf)
: e.bi_valid > 0 && (e.pending_buf[e.pending++] = e.bi_buf),
(e.bi_buf = 0),
(e.bi_valid = 0);
}
function Y(e, t, a, r) {
var n = 2 * t,
i = 2 * a;
return e[n] < e[i] || (e[n] === e[i] && r[t] <= r[a]);
}
function X(e, t, a) {
for (
var r = e.heap[a], n = a << 1;
n <= e.heap_len &&
(n < e.heap_len && Y(t, e.heap[n + 1], e.heap[n], e.depth) && n++,
!Y(t, r, e.heap[n], e.depth));

)
(e.heap[a] = e.heap[n]), (a = n), (n <<= 1);
e.heap[a] = r;
}
function V(e, t, a) {
var r,
n,
i,
s,
o = 0;
if (0 !== e.last_lit)
do {
(r =
(e.pending_buf[e.d_buf + 2 * o] << 8) | e.pending_buf[e.d_buf + 2 * o + 1]),
(n = e.pending_buf[e.l_buf + o]),
o++,
0 === r
? P(e, n, t)
: (P(e, (i = I[n]) + u + 1, t),
  0 !== (s = z[i]) && F(e, (n -= T[i]), s),
  P(e, (i = O(--r)), a),
  0 !== (s = A[i]) && F(e, (r -= D[i]), s));
} while (o < e.last_lit);
P(e, m, t);
}
function W(e, t) {
var a,
r,
n,
i = t.dyn_tree,
s = t.stat_desc.static_tree,
o = t.stat_desc.has_stree,
l = t.stat_desc.elems,
h = -1;
for (e.heap_len = 0, e.heap_max = b, a = 0; a < l; a++)
0 !== i[2 * a]
? ((e.heap[++e.heap_len] = h = a), (e.depth[a] = 0))
: (i[2 * a + 1] = 0);
for (; e.heap_len < 2; )
(i[2 * (n = e.heap[++e.heap_len] = h < 2 ? ++h : 0)] = 1),
(e.depth[n] = 0),
e.opt_len--,
o && (e.static_len -= s[2 * n + 1]);
for (t.max_code = h, a = e.heap_len >> 1; a >= 1; a--) X(e, i, a);
n = l;
do {
(a = e.heap[1]),
(e.heap[1] = e.heap[e.heap_len--]),
X(e, i, 1),
(r = e.heap[1]),
(e.heap[--e.heap_max] = a),
(e.heap[--e.heap_max] = r),
(i[2 * n] = i[2 * a] + i[2 * r]),
(e.depth[n] = (e.depth[a] >= e.depth[r] ? e.depth[a] : e.depth[r]) + 1),
(i[2 * a + 1] = i[2 * r + 1] = n),
(e.heap[1] = n++),
X(e, i, 1);
} while (e.heap_len >= 2);
(e.heap[--e.heap_max] = e.heap[1]),
(function(e, t) {
var a,
r,
n,
i,
s,
o,
l = t.dyn_tree,
h = t.max_code,
f = t.stat_desc.static_tree,
d = t.stat_desc.has_stree,
u = t.stat_desc.extra_bits,
_ = t.stat_desc.extra_base,
c = t.stat_desc.max_length,
g = 0;
for (i = 0; i <= w; i++) e.bl_count[i] = 0;
for (l[2 * e.heap[e.heap_max] + 1] = 0, a = e.heap_max + 1; a < b; a++)
(i = l[2 * l[2 * (r = e.heap[a]) + 1] + 1] + 1) > c && ((i = c), g++),
(l[2 * r + 1] = i),
r > h ||
(e.bl_count[i]++,
(s = 0),
r >= _ && (s = u[r - _]),
(o = l[2 * r]),
(e.opt_len += o * (i + s)),
d && (e.static_len += o * (f[2 * r + 1] + s)));
if (0 !== g) {
do {
for (i = c - 1; 0 === e.bl_count[i]; ) i--;
e.bl_count[i]--, (e.bl_count[i + 1] += 2), e.bl_count[c]--, (g -= 2);
} while (g > 0);
for (i = c; 0 !== i; i--)
for (r = e.bl_count[i]; 0 !== r; )
(n = e.heap[--a]) > h ||
(l[2 * n + 1] !== i &&
((e.opt_len += (i - l[2 * n + 1]) * l[2 * n]), (l[2 * n + 1] = i)),
r--);
}
})(e, t),
j(i, h, e.bl_count);
}
function J(e, t, a) {
var r,
n,
i = -1,
s = t[1],
o = 0,
l = 7,
h = 4;
for (
0 === s && ((l = 138), (h = 3)), t[2 * (a + 1) + 1] = 65535, r = 0;
r <= a;
r++
)
(n = s),
(s = t[2 * (r + 1) + 1]),
(++o < l && n === s) ||
(o < h
? (e.bl_tree[2 * n] += o)
: 0 !== n
? (n !== i && e.bl_tree[2 * n]++, e.bl_tree[2 * k]++)
: o <= 10
? e.bl_tree[2 * y]++
: e.bl_tree[2 * x]++,
(o = 0),
(i = n),
0 === s
? ((l = 138), (h = 3))
: n === s
? ((l = 6), (h = 3))
: ((l = 7), (h = 4)));
}
function Q(e, t, a) {
var r,
n,
i = -1,
s = t[1],
o = 0,
l = 7,
h = 4;
for (0 === s && ((l = 138), (h = 3)), r = 0; r <= a; r++)
if (((n = s), (s = t[2 * (r + 1) + 1]), !(++o < l && n === s))) {
if (o < h)
do {
P(e, n, e.bl_tree);
} while (0 != --o);
else
0 !== n
? (n !== i && (P(e, n, e.bl_tree), o--), P(e, k, e.bl_tree), F(e, o - 3, 2))
: o <= 10
? (P(e, y, e.bl_tree), F(e, o - 3, 3))
: (P(e, x, e.bl_tree), F(e, o - 11, 7));
(o = 0),
(i = n),
0 === s
? ((l = 138), (h = 3))
: n === s
? ((l = 6), (h = 3))
: ((l = 7), (h = 4));
}
}
o(D);
var $ = !1;
function ee(e, t, r, n) {
F(e, (l << 1) + (n ? 1 : 0), 3),
(function(e, t, r, n) {
K(e),
n && (q(e, r), q(e, ~r)),
a.arraySet(e.pending_buf, e.window, t, r, e.pending),
(e.pending += r);
})(e, t, r, !0);
}
var te = {
_tr_init: function(e) {
$ ||
((function() {
var e,
t,
a,
r,
n,
i = new Array(w + 1);
for (a = 0, r = 0; r < d - 1; r++)
for (T[r] = a, e = 0; e < 1 << z[r]; e++) I[a++] = r;
for (I[a - 1] = r, n = 0, r = 0; r < 16; r++)
for (D[r] = n, e = 0; e < 1 << A[r]; e++) R[n++] = r;
for (n >>= 7; r < c; r++)
for (D[r] = n << 7, e = 0; e < 1 << (A[r] - 7); e++) R[256 + n++] = r;
for (t = 0; t <= w; t++) i[t] = 0;
for (e = 0; e <= 143; ) (U[2 * e + 1] = 8), e++, i[8]++;
for (; e <= 255; ) (U[2 * e + 1] = 9), e++, i[9]++;
for (; e <= 279; ) (U[2 * e + 1] = 7), e++, i[7]++;
for (; e <= 287; ) (U[2 * e + 1] = 8), e++, i[8]++;
for (j(U, _ + 1, i), e = 0; e < c; e++)
(E[2 * e + 1] = 5), (E[2 * e] = H(e, 5));
(Z = new M(U, z, u + 1, _, w)),
(N = new M(E, A, 0, c, w)),
(C = new M(new Array(0), B, 0, g, p));
})(),
($ = !0)),
(e.l_desc = new L(e.dyn_ltree, Z)),
(e.d_desc = new L(e.dyn_dtree, N)),
(e.bl_desc = new L(e.bl_tree, C)),
(e.bi_buf = 0),
(e.bi_valid = 0),
G(e);
},
_tr_stored_block: ee,
_tr_flush_block: function(e, t, a, o) {
var l,
d,
_ = 0;
e.level > 0
? (e.strm.data_type === s &&
  (e.strm.data_type = (function(e) {
  var t,
  a = 4093624447;
  for (t = 0; t <= 31; t++, a >>>= 1)
  if (1 & a && 0 !== e.dyn_ltree[2 * t]) return n;
  if (0 !== e.dyn_ltree[18] || 0 !== e.dyn_ltree[20] || 0 !== e.dyn_ltree[26])
  return i;
  for (t = 32; t < u; t++) if (0 !== e.dyn_ltree[2 * t]) return i;
  return n;
  })(e)),
  W(e, e.l_desc),
  W(e, e.d_desc),
  (_ = (function(e) {
  var t;
  for (
  J(e, e.dyn_ltree, e.l_desc.max_code),
  J(e, e.dyn_dtree, e.d_desc.max_code),
  W(e, e.bl_desc),
  t = g - 1;
  t >= 3 && 0 === e.bl_tree[2 * S[t] + 1];
  t--
  );
  return (e.opt_len += 3 * (t + 1) + 5 + 5 + 4), t;
  })(e)),
  (l = (e.opt_len + 3 + 7) >>> 3),
  (d = (e.static_len + 3 + 7) >>> 3) <= l && (l = d))
: (l = d = a + 5),
a + 4 <= l && -1 !== t
? ee(e, t, a, o)
: e.strategy === r || d === l
? (F(e, (h << 1) + (o ? 1 : 0), 3), V(e, U, E))
: (F(e, (f << 1) + (o ? 1 : 0), 3),
  (function(e, t, a, r) {
  var n;
  for (F(e, t - 257, 5), F(e, a - 1, 5), F(e, r - 4, 4), n = 0; n < r; n++)
  F(e, e.bl_tree[2 * S[n] + 1], 3);
  Q(e, e.dyn_ltree, t - 1), Q(e, e.dyn_dtree, a - 1);
  })(e, e.l_desc.max_code + 1, e.d_desc.max_code + 1, _ + 1),
  V(e, e.dyn_ltree, e.dyn_dtree)),
G(e),
o && K(e);
},
_tr_tally: function(e, t, a) {
return (
(e.pending_buf[e.d_buf + 2 * e.last_lit] = (t >>> 8) & 255),
(e.pending_buf[e.d_buf + 2 * e.last_lit + 1] = 255 & t),
(e.pending_buf[e.l_buf + e.last_lit] = 255 & a),
e.last_lit++,
0 === t
? e.dyn_ltree[2 * a]++
: (e.matches++,
  t--,
  e.dyn_ltree[2 * (I[a] + u + 1)]++,
  e.dyn_dtree[2 * O(t)]++),
e.last_lit === e.lit_bufsize - 1
);
},
_tr_align: function(e) {
F(e, h << 1, 3),
P(e, m, U),
(function(e) {
16 === e.bi_valid
? (q(e, e.bi_buf), (e.bi_buf = 0), (e.bi_valid = 0))
: e.bi_valid >= 8 &&
  ((e.pending_buf[e.pending++] = 255 & e.bi_buf),
  (e.bi_buf >>= 8),
  (e.bi_valid -= 8));
})(e);
}
};
var ae = function(e, t, a, r) {
for (var n = (65535 & e) | 0, i = ((e >>> 16) & 65535) | 0, s = 0; 0 !== a; ) {
a -= s = a > 2e3 ? 2e3 : a;
do {
i = (i + (n = (n + t[r++]) | 0)) | 0;
} while (--s);
(n %= 65521), (i %= 65521);
}
return n | (i << 16) | 0;
};
var re = (function() {
for (var e, t = [], a = 0; a < 256; a++) {
e = a;
for (var r = 0; r < 8; r++) e = 1 & e ? 3988292384 ^ (e >>> 1) : e >>> 1;
t[a] = e;
}
return t;
})();
var ne,
ie = function(e, t, a, r) {
var n = re,
i = r + a;
e ^= -1;
for (var s = r; s < i; s++) e = (e >>> 8) ^ n[255 & (e ^ t[s])];
return -1 ^ e;
},
se = {
2: "need dictionary",
1: "stream end",
0: "",
"-1": "file error",
"-2": "stream error",
"-3": "data error",
"-4": "insufficient memory",
"-5": "buffer error",
"-6": "incompatible version"
},
oe = 0,
le = 1,
he = 3,
fe = 4,
de = 5,
ue = 0,
_e = 1,
ce = -2,
ge = -3,
be = -5,
we = -1,
ve = 1,
pe = 2,
me = 3,
ke = 4,
ye = 0,
xe = 2,
ze = 8,
Ae = 9,
Be = 15,
Se = 8,
Ue = 286,
Ee = 30,
Re = 19,
Ie = 2 * Ue + 1,
Te = 15,
Ze = 3,
Ne = 258,
Ce = Ne + Ze + 1,
De = 32,
Me = 42,
Le = 69,
Oe = 73,
qe = 91,
Fe = 103,
Pe = 113,
He = 666,
je = 1,
Ge = 2,
Ke = 3,
Ye = 4,
Xe = 3;
function Ve(e, t) {
return (e.msg = se[t]), t;
}
function We(e) {
return (e << 1) - (e > 4 ? 9 : 0);
}
function Je(e) {
for (var t = e.length; --t >= 0; ) e[t] = 0;
}
function Qe(e) {
var t = e.state,
r = t.pending;
r > e.avail_out && (r = e.avail_out),
0 !== r &&
(a.arraySet(e.output, t.pending_buf, t.pending_out, r, e.next_out),
(e.next_out += r),
(t.pending_out += r),
(e.total_out += r),
(e.avail_out -= r),
(t.pending -= r),
0 === t.pending && (t.pending_out = 0));
}
function $e(e, t) {
te._tr_flush_block(
e,
e.block_start >= 0 ? e.block_start : -1,
e.strstart - e.block_start,
t
),
(e.block_start = e.strstart),
Qe(e.strm);
}
function et(e, t) {
e.pending_buf[e.pending++] = t;
}
function tt(e, t) {
(e.pending_buf[e.pending++] = (t >>> 8) & 255),
(e.pending_buf[e.pending++] = 255 & t);
}
function at(e, t) {
var a,
r,
n = e.max_chain_length,
i = e.strstart,
s = e.prev_length,
o = e.nice_match,
l = e.strstart > e.w_size - Ce ? e.strstart - (e.w_size - Ce) : 0,
h = e.window,
f = e.w_mask,
d = e.prev,
u = e.strstart + Ne,
_ = h[i + s - 1],
c = h[i + s];
e.prev_length >= e.good_match && (n >>= 2),
o > e.lookahead && (o = e.lookahead);
do {
if (
h[(a = t) + s] === c &&
h[a + s - 1] === _ &&
h[a] === h[i] &&
h[++a] === h[i + 1]
) {
(i += 2), a++;
do {} while (
h[++i] === h[++a] &&
h[++i] === h[++a] &&
h[++i] === h[++a] &&
h[++i] === h[++a] &&
h[++i] === h[++a] &&
h[++i] === h[++a] &&
h[++i] === h[++a] &&
h[++i] === h[++a] &&
i < u
);
if (((r = Ne - (u - i)), (i = u - Ne), r > s)) {
if (((e.match_start = t), (s = r), r >= o)) break;
(_ = h[i + s - 1]), (c = h[i + s]);
}
}
} while ((t = d[t & f]) > l && 0 != --n);
return s <= e.lookahead ? s : e.lookahead;
}
function rt(e) {
var t,
r,
n,
i,
s,
o,
l,
h,
f,
d,
u = e.w_size;
do {
if (
((i = e.window_size - e.lookahead - e.strstart), e.strstart >= u + (u - Ce))
) {
a.arraySet(e.window, e.window, u, u, 0),
(e.match_start -= u),
(e.strstart -= u),
(e.block_start -= u),
(t = r = e.hash_size);
do {
(n = e.head[--t]), (e.head[t] = n >= u ? n - u : 0);
} while (--r);
t = r = u;
do {
(n = e.prev[--t]), (e.prev[t] = n >= u ? n - u : 0);
} while (--r);
i += u;
}
if (0 === e.strm.avail_in) break;
if (
((o = e.strm),
(l = e.window),
(h = e.strstart + e.lookahead),
(f = i),
(d = void 0),
(d = o.avail_in) > f && (d = f),
(r =
0 === d
? 0
: ((o.avail_in -= d),
  a.arraySet(l, o.input, o.next_in, d, h),
  1 === o.state.wrap
  ? (o.adler = ae(o.adler, l, d, h))
  : 2 === o.state.wrap && (o.adler = ie(o.adler, l, d, h)),
  (o.next_in += d),
  (o.total_in += d),
  d)),
(e.lookahead += r),
e.lookahead + e.insert >= Ze)
)
for (
s = e.strstart - e.insert,
e.ins_h = e.window[s],
e.ins_h = ((e.ins_h << e.hash_shift) ^ e.window[s + 1]) & e.hash_mask;
e.insert &&
((e.ins_h = ((e.ins_h << e.hash_shift) ^ e.window[s + Ze - 1]) & e.hash_mask),
(e.prev[s & e.w_mask] = e.head[e.ins_h]),
(e.head[e.ins_h] = s),
s++,
e.insert--,
!(e.lookahead + e.insert < Ze));

);
} while (e.lookahead < Ce && 0 !== e.strm.avail_in);
}
function nt(e, t) {
for (var a, r; ; ) {
if (e.lookahead < Ce) {
if ((rt(e), e.lookahead < Ce && t === oe)) return je;
if (0 === e.lookahead) break;
}
if (
((a = 0),
e.lookahead >= Ze &&
((e.ins_h =
((e.ins_h << e.hash_shift) ^ e.window[e.strstart + Ze - 1]) & e.hash_mask),
(a = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h]),
(e.head[e.ins_h] = e.strstart)),
0 !== a && e.strstart - a <= e.w_size - Ce && (e.match_length = at(e, a)),
e.match_length >= Ze)
)
if (
((r = te._tr_tally(e, e.strstart - e.match_start, e.match_length - Ze)),
(e.lookahead -= e.match_length),
e.match_length <= e.max_lazy_match && e.lookahead >= Ze)
) {
e.match_length--;
do {
e.strstart++,
(e.ins_h =
((e.ins_h << e.hash_shift) ^ e.window[e.strstart + Ze - 1]) & e.hash_mask),
(a = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h]),
(e.head[e.ins_h] = e.strstart);
} while (0 != --e.match_length);
e.strstart++;
} else
(e.strstart += e.match_length),
(e.match_length = 0),
(e.ins_h = e.window[e.strstart]),
(e.ins_h =
((e.ins_h << e.hash_shift) ^ e.window[e.strstart + 1]) & e.hash_mask);
else
(r = te._tr_tally(e, 0, e.window[e.strstart])), e.lookahead--, e.strstart++;
if (r && ($e(e, !1), 0 === e.strm.avail_out)) return je;
}
return (
(e.insert = e.strstart < Ze - 1 ? e.strstart : Ze - 1),
t === fe
? ($e(e, !0), 0 === e.strm.avail_out ? Ke : Ye)
: e.last_lit && ($e(e, !1), 0 === e.strm.avail_out)
? je
: Ge
);
}
function it(e, t) {
for (var a, r, n; ; ) {
if (e.lookahead < Ce) {
if ((rt(e), e.lookahead < Ce && t === oe)) return je;
if (0 === e.lookahead) break;
}
if (
((a = 0),
e.lookahead >= Ze &&
((e.ins_h =
((e.ins_h << e.hash_shift) ^ e.window[e.strstart + Ze - 1]) & e.hash_mask),
(a = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h]),
(e.head[e.ins_h] = e.strstart)),
(e.prev_length = e.match_length),
(e.prev_match = e.match_start),
(e.match_length = Ze - 1),
0 !== a &&
e.prev_length < e.max_lazy_match &&
e.strstart - a <= e.w_size - Ce &&
((e.match_length = at(e, a)),
e.match_length <= 5 &&
(e.strategy === ve ||
(e.match_length === Ze && e.strstart - e.match_start > 4096)) &&
(e.match_length = Ze - 1)),
e.prev_length >= Ze && e.match_length <= e.prev_length)
) {
(n = e.strstart + e.lookahead - Ze),
(r = te._tr_tally(e, e.strstart - 1 - e.prev_match, e.prev_length - Ze)),
(e.lookahead -= e.prev_length - 1),
(e.prev_length -= 2);
do {
++e.strstart <= n &&
((e.ins_h =
((e.ins_h << e.hash_shift) ^ e.window[e.strstart + Ze - 1]) & e.hash_mask),
(a = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h]),
(e.head[e.ins_h] = e.strstart));
} while (0 != --e.prev_length);
if (
((e.match_available = 0),
(e.match_length = Ze - 1),
e.strstart++,
r && ($e(e, !1), 0 === e.strm.avail_out))
)
return je;
} else if (e.match_available) {
if (
((r = te._tr_tally(e, 0, e.window[e.strstart - 1])) && $e(e, !1),
e.strstart++,
e.lookahead--,
0 === e.strm.avail_out)
)
return je;
} else (e.match_available = 1), e.strstart++, e.lookahead--;
}
return (
e.match_available &&
((r = te._tr_tally(e, 0, e.window[e.strstart - 1])), (e.match_available = 0)),
(e.insert = e.strstart < Ze - 1 ? e.strstart : Ze - 1),
t === fe
? ($e(e, !0), 0 === e.strm.avail_out ? Ke : Ye)
: e.last_lit && ($e(e, !1), 0 === e.strm.avail_out)
? je
: Ge
);
}
function st(e, t, a, r, n) {
(this.good_length = e),
(this.max_lazy = t),
(this.nice_length = a),
(this.max_chain = r),
(this.func = n);
}
function ot() {
(this.strm = null),
(this.status = 0),
(this.pending_buf = null),
(this.pending_buf_size = 0),
(this.pending_out = 0),
(this.pending = 0),
(this.wrap = 0),
(this.gzhead = null),
(this.gzindex = 0),
(this.method = ze),
(this.last_flush = -1),
(this.w_size = 0),
(this.w_bits = 0),
(this.w_mask = 0),
(this.window = null),
(this.window_size = 0),
(this.prev = null),
(this.head = null),
(this.ins_h = 0),
(this.hash_size = 0),
(this.hash_bits = 0),
(this.hash_mask = 0),
(this.hash_shift = 0),
(this.block_start = 0),
(this.match_length = 0),
(this.prev_match = 0),
(this.match_available = 0),
(this.strstart = 0),
(this.match_start = 0),
(this.lookahead = 0),
(this.prev_length = 0),
(this.max_chain_length = 0),
(this.max_lazy_match = 0),
(this.level = 0),
(this.strategy = 0),
(this.good_match = 0),
(this.nice_match = 0),
(this.dyn_ltree = new a.Buf16(2 * Ie)),
(this.dyn_dtree = new a.Buf16(2 * (2 * Ee + 1))),
(this.bl_tree = new a.Buf16(2 * (2 * Re + 1))),
Je(this.dyn_ltree),
Je(this.dyn_dtree),
Je(this.bl_tree),
(this.l_desc = null),
(this.d_desc = null),
(this.bl_desc = null),
(this.bl_count = new a.Buf16(Te + 1)),
(this.heap = new a.Buf16(2 * Ue + 1)),
Je(this.heap),
(this.heap_len = 0),
(this.heap_max = 0),
(this.depth = new a.Buf16(2 * Ue + 1)),
Je(this.depth),
(this.l_buf = 0),
(this.lit_bufsize = 0),
(this.last_lit = 0),
(this.d_buf = 0),
(this.opt_len = 0),
(this.static_len = 0),
(this.matches = 0),
(this.insert = 0),
(this.bi_buf = 0),
(this.bi_valid = 0);
}
function lt(e) {
var t;
return e && e.state
? ((e.total_in = e.total_out = 0),
  (e.data_type = xe),
  ((t = e.state).pending = 0),
  (t.pending_out = 0),
  t.wrap < 0 && (t.wrap = -t.wrap),
  (t.status = t.wrap ? Me : Pe),
  (e.adler = 2 === t.wrap ? 0 : 1),
  (t.last_flush = oe),
  te._tr_init(t),
  ue)
: Ve(e, ce);
}
function ht(e) {
var t,
a = lt(e);
return (
a === ue &&
(((t = e.state).window_size = 2 * t.w_size),
Je(t.head),
(t.max_lazy_match = ne[t.level].max_lazy),
(t.good_match = ne[t.level].good_length),
(t.nice_match = ne[t.level].nice_length),
(t.max_chain_length = ne[t.level].max_chain),
(t.strstart = 0),
(t.block_start = 0),
(t.lookahead = 0),
(t.insert = 0),
(t.match_length = t.prev_length = Ze - 1),
(t.match_available = 0),
(t.ins_h = 0)),
a
);
}
function ft(e, t, r, n, i, s) {
if (!e) return ce;
var o = 1;
if (
(t === we && (t = 6),
n < 0 ? ((o = 0), (n = -n)) : n > 15 && ((o = 2), (n -= 16)),
i < 1 ||
i > Ae ||
r !== ze ||
n < 8 ||
n > 15 ||
t < 0 ||
t > 9 ||
s < 0 ||
s > ke)
)
return Ve(e, ce);
8 === n && (n = 9);
var l = new ot();
return (
(e.state = l),
(l.strm = e),
(l.wrap = o),
(l.gzhead = null),
(l.w_bits = n),
(l.w_size = 1 << l.w_bits),
(l.w_mask = l.w_size - 1),
(l.hash_bits = i + 7),
(l.hash_size = 1 << l.hash_bits),
(l.hash_mask = l.hash_size - 1),
(l.hash_shift = ~~((l.hash_bits + Ze - 1) / Ze)),
(l.window = new a.Buf8(2 * l.w_size)),
(l.head = new a.Buf16(l.hash_size)),
(l.prev = new a.Buf16(l.w_size)),
(l.lit_bufsize = 1 << (i + 6)),
(l.pending_buf_size = 4 * l.lit_bufsize),
(l.pending_buf = new a.Buf8(l.pending_buf_size)),
(l.d_buf = 1 * l.lit_bufsize),
(l.l_buf = 3 * l.lit_bufsize),
(l.level = t),
(l.strategy = s),
(l.method = r),
ht(e)
);
}
ne = [
new st(0, 0, 0, 0, function(e, t) {
var a = 65535;
for (a > e.pending_buf_size - 5 && (a = e.pending_buf_size - 5); ; ) {
if (e.lookahead <= 1) {
if ((rt(e), 0 === e.lookahead && t === oe)) return je;
if (0 === e.lookahead) break;
}
(e.strstart += e.lookahead), (e.lookahead = 0);
var r = e.block_start + a;
if (
(0 === e.strstart || e.strstart >= r) &&
((e.lookahead = e.strstart - r),
(e.strstart = r),
$e(e, !1),
0 === e.strm.avail_out)
)
return je;
if (
e.strstart - e.block_start >= e.w_size - Ce &&
($e(e, !1), 0 === e.strm.avail_out)
)
return je;
}
return (
(e.insert = 0),
t === fe
? ($e(e, !0), 0 === e.strm.avail_out ? Ke : Ye)
: (e.strstart > e.block_start && ($e(e, !1), e.strm.avail_out), je)
);
}),
new st(4, 4, 8, 4, nt),
new st(4, 5, 16, 8, nt),
new st(4, 6, 32, 32, nt),
new st(4, 4, 16, 16, it),
new st(8, 16, 32, 32, it),
new st(8, 16, 128, 128, it),
new st(8, 32, 128, 256, it),
new st(32, 128, 258, 1024, it),
new st(32, 258, 258, 4096, it)
];
var dt = {
deflateInit: function(e, t) {
return ft(e, t, ze, Be, Se, ye);
},
deflateInit2: ft,
deflateReset: ht,
deflateResetKeep: lt,
deflateSetHeader: function(e, t) {
return e && e.state
? 2 !== e.state.wrap
  ? ce
  : ((e.state.gzhead = t), ue)
: ce;
},
deflate: function(e, t) {
var a, r, n, i;
if (!e || !e.state || t > de || t < 0) return e ? Ve(e, ce) : ce;
if (
((r = e.state),
!e.output || (!e.input && 0 !== e.avail_in) || (r.status === He && t !== fe))
)
return Ve(e, 0 === e.avail_out ? be : ce);
if (((r.strm = e), (a = r.last_flush), (r.last_flush = t), r.status === Me))
if (2 === r.wrap)
(e.adler = 0),
et(r, 31),
et(r, 139),
et(r, 8),
r.gzhead
? (et(
  r,
  (r.gzhead.text ? 1 : 0) +
  (r.gzhead.hcrc ? 2 : 0) +
  (r.gzhead.extra ? 4 : 0) +
  (r.gzhead.name ? 8 : 0) +
  (r.gzhead.comment ? 16 : 0)
  ),
  et(r, 255 & r.gzhead.time),
  et(r, (r.gzhead.time >> 8) & 255),
  et(r, (r.gzhead.time >> 16) & 255),
  et(r, (r.gzhead.time >> 24) & 255),
  et(r, 9 === r.level ? 2 : r.strategy >= pe || r.level < 2 ? 4 : 0),
  et(r, 255 & r.gzhead.os),
  r.gzhead.extra &&
  r.gzhead.extra.length &&
  (et(r, 255 & r.gzhead.extra.length),
  et(r, (r.gzhead.extra.length >> 8) & 255)),
  r.gzhead.hcrc && (e.adler = ie(e.adler, r.pending_buf, r.pending, 0)),
  (r.gzindex = 0),
  (r.status = Le))
: (et(r, 0),
  et(r, 0),
  et(r, 0),
  et(r, 0),
  et(r, 0),
  et(r, 9 === r.level ? 2 : r.strategy >= pe || r.level < 2 ? 4 : 0),
  et(r, Xe),
  (r.status = Pe));
else {
var s = (ze + ((r.w_bits - 8) << 4)) << 8;
(s |=
(r.strategy >= pe || r.level < 2
? 0
: r.level < 6
? 1
: 6 === r.level
? 2
: 3) << 6),
0 !== r.strstart && (s |= De),
(s += 31 - (s % 31)),
(r.status = Pe),
tt(r, s),
0 !== r.strstart && (tt(r, e.adler >>> 16), tt(r, 65535 & e.adler)),
(e.adler = 1);
}
if (r.status === Le)
if (r.gzhead.extra) {
for (
n = r.pending;
r.gzindex < (65535 & r.gzhead.extra.length) &&
(r.pending !== r.pending_buf_size ||
(r.gzhead.hcrc &&
r.pending > n &&
(e.adler = ie(e.adler, r.pending_buf, r.pending - n, n)),
Qe(e),
(n = r.pending),
r.pending !== r.pending_buf_size));

)
et(r, 255 & r.gzhead.extra[r.gzindex]), r.gzindex++;
r.gzhead.hcrc &&
r.pending > n &&
(e.adler = ie(e.adler, r.pending_buf, r.pending - n, n)),
r.gzindex === r.gzhead.extra.length && ((r.gzindex = 0), (r.status = Oe));
} else r.status = Oe;
if (r.status === Oe)
if (r.gzhead.name) {
n = r.pending;
do {
if (
r.pending === r.pending_buf_size &&
(r.gzhead.hcrc &&
r.pending > n &&
(e.adler = ie(e.adler, r.pending_buf, r.pending - n, n)),
Qe(e),
(n = r.pending),
r.pending === r.pending_buf_size)
) {
i = 1;
break;
}
(i =
r.gzindex < r.gzhead.name.length
? 255 & r.gzhead.name.charCodeAt(r.gzindex++)
: 0),
et(r, i);
} while (0 !== i);
r.gzhead.hcrc &&
r.pending > n &&
(e.adler = ie(e.adler, r.pending_buf, r.pending - n, n)),
0 === i && ((r.gzindex = 0), (r.status = qe));
} else r.status = qe;
if (r.status === qe)
if (r.gzhead.comment) {
n = r.pending;
do {
if (
r.pending === r.pending_buf_size &&
(r.gzhead.hcrc &&
r.pending > n &&
(e.adler = ie(e.adler, r.pending_buf, r.pending - n, n)),
Qe(e),
(n = r.pending),
r.pending === r.pending_buf_size)
) {
i = 1;
break;
}
(i =
r.gzindex < r.gzhead.comment.length
? 255 & r.gzhead.comment.charCodeAt(r.gzindex++)
: 0),
et(r, i);
} while (0 !== i);
r.gzhead.hcrc &&
r.pending > n &&
(e.adler = ie(e.adler, r.pending_buf, r.pending - n, n)),
0 === i && (r.status = Fe);
} else r.status = Fe;
if (
(r.status === Fe &&
(r.gzhead.hcrc
? (r.pending + 2 > r.pending_buf_size && Qe(e),
  r.pending + 2 <= r.pending_buf_size &&
  (et(r, 255 & e.adler),
  et(r, (e.adler >> 8) & 255),
  (e.adler = 0),
  (r.status = Pe)))
: (r.status = Pe)),
0 !== r.pending)
) {
if ((Qe(e), 0 === e.avail_out)) return (r.last_flush = -1), ue;
} else if (0 === e.avail_in && We(t) <= We(a) && t !== fe) return Ve(e, be);
if (r.status === He && 0 !== e.avail_in) return Ve(e, be);
if (0 !== e.avail_in || 0 !== r.lookahead || (t !== oe && r.status !== He)) {
var o =
r.strategy === pe
? (function(e, t) {
  for (var a; ; ) {
  if (0 === e.lookahead && (rt(e), 0 === e.lookahead)) {
  if (t === oe) return je;
  break;
  }
  if (
  ((e.match_length = 0),
  (a = te._tr_tally(e, 0, e.window[e.strstart])),
  e.lookahead--,
  e.strstart++,
  a && ($e(e, !1), 0 === e.strm.avail_out))
  )
  return je;
  }
  return (
  (e.insert = 0),
  t === fe
  ? ($e(e, !0), 0 === e.strm.avail_out ? Ke : Ye)
  : e.last_lit && ($e(e, !1), 0 === e.strm.avail_out)
  ? je
  : Ge
  );
  })(r, t)
: r.strategy === me
? (function(e, t) {
  for (var a, r, n, i, s = e.window; ; ) {
  if (e.lookahead <= Ne) {
  if ((rt(e), e.lookahead <= Ne && t === oe)) return je;
  if (0 === e.lookahead) break;
  }
  if (
  ((e.match_length = 0),
  e.lookahead >= Ze &&
  e.strstart > 0 &&
  (r = s[(n = e.strstart - 1)]) === s[++n] &&
  r === s[++n] &&
  r === s[++n])
  ) {
  i = e.strstart + Ne;
  do {} while (
  r === s[++n] &&
  r === s[++n] &&
  r === s[++n] &&
  r === s[++n] &&
  r === s[++n] &&
  r === s[++n] &&
  r === s[++n] &&
  r === s[++n] &&
  n < i
  );
  (e.match_length = Ne - (i - n)),
  e.match_length > e.lookahead && (e.match_length = e.lookahead);
  }
  if (
  (e.match_length >= Ze
  ? ((a = te._tr_tally(e, 1, e.match_length - Ze)),
    (e.lookahead -= e.match_length),
    (e.strstart += e.match_length),
    (e.match_length = 0))
  : ((a = te._tr_tally(e, 0, e.window[e.strstart])),
    e.lookahead--,
    e.strstart++),
  a && ($e(e, !1), 0 === e.strm.avail_out))
  )
  return je;
  }
  return (
  (e.insert = 0),
  t === fe
  ? ($e(e, !0), 0 === e.strm.avail_out ? Ke : Ye)
  : e.last_lit && ($e(e, !1), 0 === e.strm.avail_out)
  ? je
  : Ge
  );
  })(r, t)
: ne[r.level].func(r, t);
if (((o !== Ke && o !== Ye) || (r.status = He), o === je || o === Ke))
return 0 === e.avail_out && (r.last_flush = -1), ue;
if (
o === Ge &&
(t === le
? te._tr_align(r)
: t !== de &&
  (te._tr_stored_block(r, 0, 0, !1),
  t === he &&
  (Je(r.head),
  0 === r.lookahead &&
  ((r.strstart = 0), (r.block_start = 0), (r.insert = 0)))),
Qe(e),
0 === e.avail_out)
)
return (r.last_flush = -1), ue;
}
return t !== fe
? ue
: r.wrap <= 0
? _e
: (2 === r.wrap
  ? (et(r, 255 & e.adler),
    et(r, (e.adler >> 8) & 255),
    et(r, (e.adler >> 16) & 255),
    et(r, (e.adler >> 24) & 255),
    et(r, 255 & e.total_in),
    et(r, (e.total_in >> 8) & 255),
    et(r, (e.total_in >> 16) & 255),
    et(r, (e.total_in >> 24) & 255))
  : (tt(r, e.adler >>> 16), tt(r, 65535 & e.adler)),
  Qe(e),
  r.wrap > 0 && (r.wrap = -r.wrap),
  0 !== r.pending ? ue : _e);
},
deflateEnd: function(e) {
var t;
return e && e.state
? (t = e.state.status) !== Me &&
  t !== Le &&
  t !== Oe &&
  t !== qe &&
  t !== Fe &&
  t !== Pe &&
  t !== He
  ? Ve(e, ce)
  : ((e.state = null), t === Pe ? Ve(e, ge) : ue)
: ce;
},
deflateSetDictionary: function(e, t) {
var r,
n,
i,
s,
o,
l,
h,
f,
d = t.length;
if (!e || !e.state) return ce;
if (
2 === (s = (r = e.state).wrap) ||
(1 === s && r.status !== Me) ||
r.lookahead
)
return ce;
for (
1 === s && (e.adler = ae(e.adler, t, d, 0)),
r.wrap = 0,
d >= r.w_size &&
(0 === s && (Je(r.head), (r.strstart = 0), (r.block_start = 0), (r.insert = 0)),
(f = new a.Buf8(r.w_size)),
a.arraySet(f, t, d - r.w_size, r.w_size, 0),
(t = f),
(d = r.w_size)),
o = e.avail_in,
l = e.next_in,
h = e.input,
e.avail_in = d,
e.next_in = 0,
e.input = t,
rt(r);
r.lookahead >= Ze;

) {
(n = r.strstart), (i = r.lookahead - (Ze - 1));
do {
(r.ins_h = ((r.ins_h << r.hash_shift) ^ r.window[n + Ze - 1]) & r.hash_mask),
(r.prev[n & r.w_mask] = r.head[r.ins_h]),
(r.head[r.ins_h] = n),
n++;
} while (--i);
(r.strstart = n), (r.lookahead = Ze - 1), rt(r);
}
return (
(r.strstart += r.lookahead),
(r.block_start = r.strstart),
(r.insert = r.lookahead),
(r.lookahead = 0),
(r.match_length = r.prev_length = Ze - 1),
(r.match_available = 0),
(e.next_in = l),
(e.input = h),
(e.avail_in = o),
(r.wrap = s),
ue
);
},
deflateInfo: "pako deflate (from Nodeca project)"
},
ut = !0,
_t = !0;
try {
String.fromCharCode.apply(null, [0]);
} catch (e) {
ut = !1;
}
try {
String.fromCharCode.apply(null, new Uint8Array(1));
} catch (e) {
_t = !1;
}
for (var ct = new a.Buf8(256), gt = 0; gt < 256; gt++)
ct[gt] =
gt >= 252
? 6
: gt >= 248
? 5
: gt >= 240
? 4
: gt >= 224
? 3
: gt >= 192
? 2
: 1;
ct[254] = ct[254] = 1;
function bt(e, t) {
if (t < 65534 && ((e.subarray && _t) || (!e.subarray && ut)))
return String.fromCharCode.apply(null, a.shrinkBuf(e, t));
for (var r = "", n = 0; n < t; n++) r += String.fromCharCode(e[n]);
return r;
}
var wt = {
string2buf: function(e) {
var t,
r,
n,
i,
s,
o = e.length,
l = 0;
for (i = 0; i < o; i++)
55296 == (64512 & (r = e.charCodeAt(i))) &&
i + 1 < o &&
56320 == (64512 & (n = e.charCodeAt(i + 1))) &&
((r = 65536 + ((r - 55296) << 10) + (n - 56320)), i++),
(l += r < 128 ? 1 : r < 2048 ? 2 : r < 65536 ? 3 : 4);
for (t = new a.Buf8(l), s = 0, i = 0; s < l; i++)
55296 == (64512 & (r = e.charCodeAt(i))) &&
i + 1 < o &&
56320 == (64512 & (n = e.charCodeAt(i + 1))) &&
((r = 65536 + ((r - 55296) << 10) + (n - 56320)), i++),
r < 128
? (t[s++] = r)
: r < 2048
? ((t[s++] = 192 | (r >>> 6)), (t[s++] = 128 | (63 & r)))
: r < 65536
? ((t[s++] = 224 | (r >>> 12)),
  (t[s++] = 128 | ((r >>> 6) & 63)),
  (t[s++] = 128 | (63 & r)))
: ((t[s++] = 240 | (r >>> 18)),
  (t[s++] = 128 | ((r >>> 12) & 63)),
  (t[s++] = 128 | ((r >>> 6) & 63)),
  (t[s++] = 128 | (63 & r)));
return t;
},
buf2binstring: function(e) {
return bt(e, e.length);
},
binstring2buf: function(e) {
for (var t = new a.Buf8(e.length), r = 0, n = t.length; r < n; r++)
t[r] = e.charCodeAt(r);
return t;
},
buf2string: function(e, t) {
var a,
r,
n,
i,
s = t || e.length,
o = new Array(2 * s);
for (r = 0, a = 0; a < s; )
if ((n = e[a++]) < 128) o[r++] = n;
else if ((i = ct[n]) > 4) (o[r++] = 65533), (a += i - 1);
else {
for (n &= 2 === i ? 31 : 3 === i ? 15 : 7; i > 1 && a < s; )
(n = (n << 6) | (63 & e[a++])), i--;
i > 1
? (o[r++] = 65533)
: n < 65536
? (o[r++] = n)
: ((n -= 65536),
  (o[r++] = 55296 | ((n >> 10) & 1023)),
  (o[r++] = 56320 | (1023 & n)));
}
return bt(o, r);
},
utf8border: function(e, t) {
var a;
for (
(t = t || e.length) > e.length && (t = e.length), a = t - 1;
a >= 0 && 128 == (192 & e[a]);

)
a--;
return a < 0 ? t : 0 === a ? t : a + ct[e[a]] > t ? a : t;
}
};
var vt = function() {
(this.input = null),
(this.next_in = 0),
(this.avail_in = 0),
(this.total_in = 0),
(this.output = null),
(this.next_out = 0),
(this.avail_out = 0),
(this.total_out = 0),
(this.msg = ""),
(this.state = null),
(this.data_type = 2),
(this.adler = 0);
},
pt = Object.prototype.toString,
mt = 0,
kt = -1,
yt = 0,
xt = 8;
function zt(e) {
if (!(this instanceof zt)) return new zt(e);
this.options = a.assign(
{
level: kt,
method: xt,
chunkSize: 16384,
windowBits: 15,
memLevel: 8,
strategy: yt,
to: ""
},
e || {}
);
var t = this.options;
t.raw && t.windowBits > 0
? (t.windowBits = -t.windowBits)
: t.gzip && t.windowBits > 0 && t.windowBits < 16 && (t.windowBits += 16),
(this.err = 0),
(this.msg = ""),
(this.ended = !1),
(this.chunks = []),
(this.strm = new vt()),
(this.strm.avail_out = 0);
var r = dt.deflateInit2(
this.strm,
t.level,
t.method,
t.windowBits,
t.memLevel,
t.strategy
);
if (r !== mt) throw new Error(se[r]);
if ((t.header && dt.deflateSetHeader(this.strm, t.header), t.dictionary)) {
var n;
if (
((n =
"string" == typeof t.dictionary
? wt.string2buf(t.dictionary)
: "[object ArrayBuffer]" === pt.call(t.dictionary)
? new Uint8Array(t.dictionary)
: t.dictionary),
(r = dt.deflateSetDictionary(this.strm, n)) !== mt)
)
throw new Error(se[r]);
this._dict_set = !0;
}
}
function At(e, t) {
var a = new zt(t);
if ((a.push(e, !0), a.err)) throw a.msg || se[a.err];
return a.result;
}
(zt.prototype.push = function(e, t) {
var r,
n,
i = this.strm,
s = this.options.chunkSize;
if (this.ended) return !1;
(n = t === ~~t ? t : !0 === t ? 4 : 0),
"string" == typeof e
? (i.input = wt.string2buf(e))
: "[object ArrayBuffer]" === pt.call(e)
? (i.input = new Uint8Array(e))
: (i.input = e),
(i.next_in = 0),
(i.avail_in = i.input.length);
do {
if (
(0 === i.avail_out &&
((i.output = new a.Buf8(s)), (i.next_out = 0), (i.avail_out = s)),
1 !== (r = dt.deflate(i, n)) && r !== mt)
)
return this.onEnd(r), (this.ended = !0), !1;
(0 !== i.avail_out && (0 !== i.avail_in || (4 !== n && 2 !== n))) ||
("string" === this.options.to
? this.onData(wt.buf2binstring(a.shrinkBuf(i.output, i.next_out)))
: this.onData(a.shrinkBuf(i.output, i.next_out)));
} while ((i.avail_in > 0 || 0 === i.avail_out) && 1 !== r);
return 4 === n
? ((r = dt.deflateEnd(this.strm)), this.onEnd(r), (this.ended = !0), r === mt)
: 2 !== n || (this.onEnd(mt), (i.avail_out = 0), !0);
}),
(zt.prototype.onData = function(e) {
this.chunks.push(e);
}),
(zt.prototype.onEnd = function(e) {
e === mt &&
("string" === this.options.to
? (this.result = this.chunks.join(""))
: (this.result = a.flattenChunks(this.chunks))),
(this.chunks = []),
(this.err = e),
(this.msg = this.strm.msg);
});
var Bt = {
Deflate: zt,
deflate: At,
deflateRaw: function(e, t) {
return ((t = t || {}).raw = !0), At(e, t);
},
gzip: function(e, t) {
return ((t = t || {}).gzip = !0), At(e, t);
}
},
St = function(e, t) {
var a, r, n, i, s, o, l, h, f, d, u, _, c, g, b, w, v, p, m, k, y, x, z, A, B;
(a = e.state),
(r = e.next_in),
(A = e.input),
(n = r + (e.avail_in - 5)),
(i = e.next_out),
(B = e.output),
(s = i - (t - e.avail_out)),
(o = i + (e.avail_out - 257)),
(l = a.dmax),
(h = a.wsize),
(f = a.whave),
(d = a.wnext),
(u = a.window),
(_ = a.hold),
(c = a.bits),
(g = a.lencode),
(b = a.distcode),
(w = (1 << a.lenbits) - 1),
(v = (1 << a.distbits) - 1);
e: do {
c < 15 && ((_ += A[r++] << c), (c += 8), (_ += A[r++] << c), (c += 8)),
(p = g[_ & w]);
t: for (;;) {
if (((_ >>>= m = p >>> 24), (c -= m), 0 === (m = (p >>> 16) & 255)))
B[i++] = 65535 & p;
else {
if (!(16 & m)) {
if (0 == (64 & m)) {
p = g[(65535 & p) + (_ & ((1 << m) - 1))];
continue t;
}
if (32 & m) {
a.mode = 12;
break e;
}
(e.msg = "invalid literal/length code"), (a.mode = 30);
break e;
}
(k = 65535 & p),
(m &= 15) &&
(c < m && ((_ += A[r++] << c), (c += 8)),
(k += _ & ((1 << m) - 1)),
(_ >>>= m),
(c -= m)),
c < 15 && ((_ += A[r++] << c), (c += 8), (_ += A[r++] << c), (c += 8)),
(p = b[_ & v]);
a: for (;;) {
if (((_ >>>= m = p >>> 24), (c -= m), !(16 & (m = (p >>> 16) & 255)))) {
if (0 == (64 & m)) {
p = b[(65535 & p) + (_ & ((1 << m) - 1))];
continue a;
}
(e.msg = "invalid distance code"), (a.mode = 30);
break e;
}
if (
((y = 65535 & p),
c < (m &= 15) &&
((_ += A[r++] << c), (c += 8) < m && ((_ += A[r++] << c), (c += 8))),
(y += _ & ((1 << m) - 1)) > l)
) {
(e.msg = "invalid distance too far back"), (a.mode = 30);
break e;
}
if (((_ >>>= m), (c -= m), y > (m = i - s))) {
if ((m = y - m) > f && a.sane) {
(e.msg = "invalid distance too far back"), (a.mode = 30);
break e;
}
if (((x = 0), (z = u), 0 === d)) {
if (((x += h - m), m < k)) {
k -= m;
do {
B[i++] = u[x++];
} while (--m);
(x = i - y), (z = B);
}
} else if (d < m) {
if (((x += h + d - m), (m -= d) < k)) {
k -= m;
do {
B[i++] = u[x++];
} while (--m);
if (((x = 0), d < k)) {
k -= m = d;
do {
B[i++] = u[x++];
} while (--m);
(x = i - y), (z = B);
}
}
} else if (((x += d - m), m < k)) {
k -= m;
do {
B[i++] = u[x++];
} while (--m);
(x = i - y), (z = B);
}
for (; k > 2; )
(B[i++] = z[x++]), (B[i++] = z[x++]), (B[i++] = z[x++]), (k -= 3);
k && ((B[i++] = z[x++]), k > 1 && (B[i++] = z[x++]));
} else {
x = i - y;
do {
(B[i++] = B[x++]), (B[i++] = B[x++]), (B[i++] = B[x++]), (k -= 3);
} while (k > 2);
k && ((B[i++] = B[x++]), k > 1 && (B[i++] = B[x++]));
}
break;
}
}
break;
}
} while (r < n && i < o);
(r -= k = c >> 3),
(_ &= (1 << (c -= k << 3)) - 1),
(e.next_in = r),
(e.next_out = i),
(e.avail_in = r < n ? n - r + 5 : 5 - (r - n)),
(e.avail_out = i < o ? o - i + 257 : 257 - (i - o)),
(a.hold = _),
(a.bits = c);
},
Ut = [
3,
4,
5,
6,
7,
8,
9,
10,
11,
13,
15,
17,
19,
23,
27,
31,
35,
43,
51,
59,
67,
83,
99,
115,
131,
163,
195,
227,
258,
0,
0
],
Et = [
16,
16,
16,
16,
16,
16,
16,
16,
17,
17,
17,
17,
18,
18,
18,
18,
19,
19,
19,
19,
20,
20,
20,
20,
21,
21,
21,
21,
16,
72,
78
],
Rt = [
1,
2,
3,
4,
5,
7,
9,
13,
17,
25,
33,
49,
65,
97,
129,
193,
257,
385,
513,
769,
1025,
1537,
2049,
3073,
4097,
6145,
8193,
12289,
16385,
24577,
0,
0
],
It = [
16,
16,
16,
16,
17,
17,
18,
18,
19,
19,
20,
20,
21,
21,
22,
22,
23,
23,
24,
24,
25,
25,
26,
26,
27,
27,
28,
28,
29,
29,
64,
64
],
Tt = function(e, t, r, n, i, s, o, l) {
var h,
f,
d,
u,
_,
c,
g,
b,
w,
v = l.bits,
p = 0,
m = 0,
k = 0,
y = 0,
x = 0,
z = 0,
A = 0,
B = 0,
S = 0,
U = 0,
E = null,
R = 0,
I = new a.Buf16(16),
T = new a.Buf16(16),
Z = null,
N = 0;
for (p = 0; p <= 15; p++) I[p] = 0;
for (m = 0; m < n; m++) I[t[r + m]]++;
for (x = v, y = 15; y >= 1 && 0 === I[y]; y--);
if ((x > y && (x = y), 0 === y))
return (i[s++] = 20971520), (i[s++] = 20971520), (l.bits = 1), 0;
for (k = 1; k < y && 0 === I[k]; k++);
for (x < k && (x = k), B = 1, p = 1; p <= 15; p++)
if (((B <<= 1), (B -= I[p]) < 0)) return -1;
if (B > 0 && (0 === e || 1 !== y)) return -1;
for (T[1] = 0, p = 1; p < 15; p++) T[p + 1] = T[p] + I[p];
for (m = 0; m < n; m++) 0 !== t[r + m] && (o[T[t[r + m]]++] = m);
if (
(0 === e
? ((E = Z = o), (c = 19))
: 1 === e
? ((E = Ut), (R -= 257), (Z = Et), (N -= 257), (c = 256))
: ((E = Rt), (Z = It), (c = -1)),
(U = 0),
(m = 0),
(p = k),
(_ = s),
(z = x),
(A = 0),
(d = -1),
(u = (S = 1 << x) - 1),
(1 === e && S > 852) || (2 === e && S > 592))
)
return 1;
for (;;) {
(g = p - A),
o[m] < c
? ((b = 0), (w = o[m]))
: o[m] > c
? ((b = Z[N + o[m]]), (w = E[R + o[m]]))
: ((b = 96), (w = 0)),
(h = 1 << (p - A)),
(k = f = 1 << z);
do {
i[_ + (U >> A) + (f -= h)] = (g << 24) | (b << 16) | w | 0;
} while (0 !== f);
for (h = 1 << (p - 1); U & h; ) h >>= 1;
if ((0 !== h ? ((U &= h - 1), (U += h)) : (U = 0), m++, 0 == --I[p])) {
if (p === y) break;
p = t[r + o[m]];
}
if (p > x && (U & u) !== d) {
for (
0 === A && (A = x), _ += k, B = 1 << (z = p - A);
z + A < y && !((B -= I[z + A]) <= 0);

)
z++, (B <<= 1);
if (((S += 1 << z), (1 === e && S > 852) || (2 === e && S > 592))) return 1;
i[(d = U & u)] = (x << 24) | (z << 16) | (_ - s) | 0;
}
}
return (
0 !== U && (i[_ + U] = ((p - A) << 24) | (64 << 16) | 0), (l.bits = x), 0
);
},
Zt = 0,
Nt = 1,
Ct = 2,
Dt = 4,
Mt = 5,
Lt = 6,
Ot = 0,
qt = 1,
Ft = 2,
Pt = -2,
Ht = -3,
jt = -4,
Gt = -5,
Kt = 8,
Yt = 1,
Xt = 2,
Vt = 3,
Wt = 4,
Jt = 5,
Qt = 6,
$t = 7,
ea = 8,
ta = 9,
aa = 10,
ra = 11,
na = 12,
ia = 13,
sa = 14,
oa = 15,
la = 16,
ha = 17,
fa = 18,
da = 19,
ua = 20,
_a = 21,
ca = 22,
ga = 23,
ba = 24,
wa = 25,
va = 26,
pa = 27,
ma = 28,
ka = 29,
ya = 30,
xa = 31,
za = 32,
Aa = 852,
Ba = 592,
Sa = 15;
function Ua(e) {
return (
((e >>> 24) & 255) +
((e >>> 8) & 65280) +
((65280 & e) << 8) +
((255 & e) << 24)
);
}
function Ea() {
(this.mode = 0),
(this.last = !1),
(this.wrap = 0),
(this.havedict = !1),
(this.flags = 0),
(this.dmax = 0),
(this.check = 0),
(this.total = 0),
(this.head = null),
(this.wbits = 0),
(this.wsize = 0),
(this.whave = 0),
(this.wnext = 0),
(this.window = null),
(this.hold = 0),
(this.bits = 0),
(this.length = 0),
(this.offset = 0),
(this.extra = 0),
(this.lencode = null),
(this.distcode = null),
(this.lenbits = 0),
(this.distbits = 0),
(this.ncode = 0),
(this.nlen = 0),
(this.ndist = 0),
(this.have = 0),
(this.next = null),
(this.lens = new a.Buf16(320)),
(this.work = new a.Buf16(288)),
(this.lendyn = null),
(this.distdyn = null),
(this.sane = 0),
(this.back = 0),
(this.was = 0);
}
function Ra(e) {
var t;
return e && e.state
? ((t = e.state),
  (e.total_in = e.total_out = t.total = 0),
  (e.msg = ""),
  t.wrap && (e.adler = 1 & t.wrap),
  (t.mode = Yt),
  (t.last = 0),
  (t.havedict = 0),
  (t.dmax = 32768),
  (t.head = null),
  (t.hold = 0),
  (t.bits = 0),
  (t.lencode = t.lendyn = new a.Buf32(Aa)),
  (t.distcode = t.distdyn = new a.Buf32(Ba)),
  (t.sane = 1),
  (t.back = -1),
  Ot)
: Pt;
}
function Ia(e) {
var t;
return e && e.state
? (((t = e.state).wsize = 0), (t.whave = 0), (t.wnext = 0), Ra(e))
: Pt;
}
function Ta(e, t) {
var a, r;
return e && e.state
? ((r = e.state),
  t < 0 ? ((a = 0), (t = -t)) : ((a = 1 + (t >> 4)), t < 48 && (t &= 15)),
  t && (t < 8 || t > 15)
  ? Pt
  : (null !== r.window && r.wbits !== t && (r.window = null),
    (r.wrap = a),
    (r.wbits = t),
    Ia(e)))
: Pt;
}
function Za(e, t) {
var a, r;
return e
? ((r = new Ea()),
  (e.state = r),
  (r.window = null),
  (a = Ta(e, t)) !== Ot && (e.state = null),
  a)
: Pt;
}
var Na,
Ca,
Da = !0;
function Ma(e) {
if (Da) {
var t;
for (Na = new a.Buf32(512), Ca = new a.Buf32(32), t = 0; t < 144; )
e.lens[t++] = 8;
for (; t < 256; ) e.lens[t++] = 9;
for (; t < 280; ) e.lens[t++] = 7;
for (; t < 288; ) e.lens[t++] = 8;
for (Tt(Nt, e.lens, 0, 288, Na, 0, e.work, {bits: 9}), t = 0; t < 32; )
e.lens[t++] = 5;
Tt(Ct, e.lens, 0, 32, Ca, 0, e.work, {bits: 5}), (Da = !1);
}
(e.lencode = Na), (e.lenbits = 9), (e.distcode = Ca), (e.distbits = 5);
}
function La(e, t, r, n) {
var i,
s = e.state;
return (
null === s.window &&
((s.wsize = 1 << s.wbits),
(s.wnext = 0),
(s.whave = 0),
(s.window = new a.Buf8(s.wsize))),
n >= s.wsize
? (a.arraySet(s.window, t, r - s.wsize, s.wsize, 0),
  (s.wnext = 0),
  (s.whave = s.wsize))
: ((i = s.wsize - s.wnext) > n && (i = n),
  a.arraySet(s.window, t, r - n, i, s.wnext),
  (n -= i)
  ? (a.arraySet(s.window, t, r - n, n, 0), (s.wnext = n), (s.whave = s.wsize))
  : ((s.wnext += i),
    s.wnext === s.wsize && (s.wnext = 0),
    s.whave < s.wsize && (s.whave += i))),
0
);
}
var Oa = {
inflateReset: Ia,
inflateReset2: Ta,
inflateResetKeep: Ra,
inflateInit: function(e) {
return Za(e, Sa);
},
inflateInit2: Za,
inflate: function(e, t) {
var r,
n,
i,
s,
o,
l,
h,
f,
d,
u,
_,
c,
g,
b,
w,
v,
p,
m,
k,
y,
x,
z,
A,
B,
S = 0,
U = new a.Buf8(4),
E = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
if (!e || !e.state || !e.output || (!e.input && 0 !== e.avail_in)) return Pt;
(r = e.state).mode === na && (r.mode = ia),
(o = e.next_out),
(i = e.output),
(h = e.avail_out),
(s = e.next_in),
(n = e.input),
(l = e.avail_in),
(f = r.hold),
(d = r.bits),
(u = l),
(_ = h),
(z = Ot);
e: for (;;)
switch (r.mode) {
case Yt:
if (0 === r.wrap) {
r.mode = ia;
break;
}
for (; d < 16; ) {
if (0 === l) break e;
l--, (f += n[s++] << d), (d += 8);
}
if (2 & r.wrap && 35615 === f) {
(r.check = 0),
(U[0] = 255 & f),
(U[1] = (f >>> 8) & 255),
(r.check = ie(r.check, U, 2, 0)),
(f = 0),
(d = 0),
(r.mode = Xt);
break;
}
if (
((r.flags = 0),
r.head && (r.head.done = !1),
!(1 & r.wrap) || (((255 & f) << 8) + (f >> 8)) % 31)
) {
(e.msg = "incorrect header check"), (r.mode = ya);
break;
}
if ((15 & f) !== Kt) {
(e.msg = "unknown compression method"), (r.mode = ya);
break;
}
if (((d -= 4), (x = 8 + (15 & (f >>>= 4))), 0 === r.wbits)) r.wbits = x;
else if (x > r.wbits) {
(e.msg = "invalid window size"), (r.mode = ya);
break;
}
(r.dmax = 1 << x),
(e.adler = r.check = 1),
(r.mode = 512 & f ? aa : na),
(f = 0),
(d = 0);
break;
case Xt:
for (; d < 16; ) {
if (0 === l) break e;
l--, (f += n[s++] << d), (d += 8);
}
if (((r.flags = f), (255 & r.flags) !== Kt)) {
(e.msg = "unknown compression method"), (r.mode = ya);
break;
}
if (57344 & r.flags) {
(e.msg = "unknown header flags set"), (r.mode = ya);
break;
}
r.head && (r.head.text = (f >> 8) & 1),
512 & r.flags &&
((U[0] = 255 & f), (U[1] = (f >>> 8) & 255), (r.check = ie(r.check, U, 2, 0))),
(f = 0),
(d = 0),
(r.mode = Vt);
case Vt:
for (; d < 32; ) {
if (0 === l) break e;
l--, (f += n[s++] << d), (d += 8);
}
r.head && (r.head.time = f),
512 & r.flags &&
((U[0] = 255 & f),
(U[1] = (f >>> 8) & 255),
(U[2] = (f >>> 16) & 255),
(U[3] = (f >>> 24) & 255),
(r.check = ie(r.check, U, 4, 0))),
(f = 0),
(d = 0),
(r.mode = Wt);
case Wt:
for (; d < 16; ) {
if (0 === l) break e;
l--, (f += n[s++] << d), (d += 8);
}
r.head && ((r.head.xflags = 255 & f), (r.head.os = f >> 8)),
512 & r.flags &&
((U[0] = 255 & f), (U[1] = (f >>> 8) & 255), (r.check = ie(r.check, U, 2, 0))),
(f = 0),
(d = 0),
(r.mode = Jt);
case Jt:
if (1024 & r.flags) {
for (; d < 16; ) {
if (0 === l) break e;
l--, (f += n[s++] << d), (d += 8);
}
(r.length = f),
r.head && (r.head.extra_len = f),
512 & r.flags &&
((U[0] = 255 & f), (U[1] = (f >>> 8) & 255), (r.check = ie(r.check, U, 2, 0))),
(f = 0),
(d = 0);
} else r.head && (r.head.extra = null);
r.mode = Qt;
case Qt:
if (
1024 & r.flags &&
((c = r.length) > l && (c = l),
c &&
(r.head &&
((x = r.head.extra_len - r.length),
r.head.extra || (r.head.extra = new Array(r.head.extra_len)),
a.arraySet(r.head.extra, n, s, c, x)),
512 & r.flags && (r.check = ie(r.check, n, c, s)),
(l -= c),
(s += c),
(r.length -= c)),
r.length)
)
break e;
(r.length = 0), (r.mode = $t);
case $t:
if (2048 & r.flags) {
if (0 === l) break e;
c = 0;
do {
(x = n[s + c++]),
r.head && x && r.length < 65536 && (r.head.name += String.fromCharCode(x));
} while (x && c < l);
if ((512 & r.flags && (r.check = ie(r.check, n, c, s)), (l -= c), (s += c), x))
break e;
} else r.head && (r.head.name = null);
(r.length = 0), (r.mode = ea);
case ea:
if (4096 & r.flags) {
if (0 === l) break e;
c = 0;
do {
(x = n[s + c++]),
r.head && x && r.length < 65536 && (r.head.comment += String.fromCharCode(x));
} while (x && c < l);
if ((512 & r.flags && (r.check = ie(r.check, n, c, s)), (l -= c), (s += c), x))
break e;
} else r.head && (r.head.comment = null);
r.mode = ta;
case ta:
if (512 & r.flags) {
for (; d < 16; ) {
if (0 === l) break e;
l--, (f += n[s++] << d), (d += 8);
}
if (f !== (65535 & r.check)) {
(e.msg = "header crc mismatch"), (r.mode = ya);
break;
}
(f = 0), (d = 0);
}
r.head && ((r.head.hcrc = (r.flags >> 9) & 1), (r.head.done = !0)),
(e.adler = r.check = 0),
(r.mode = na);
break;
case aa:
for (; d < 32; ) {
if (0 === l) break e;
l--, (f += n[s++] << d), (d += 8);
}
(e.adler = r.check = Ua(f)), (f = 0), (d = 0), (r.mode = ra);
case ra:
if (0 === r.havedict)
return (
(e.next_out = o),
(e.avail_out = h),
(e.next_in = s),
(e.avail_in = l),
(r.hold = f),
(r.bits = d),
Ft
);
(e.adler = r.check = 1), (r.mode = na);
case na:
if (t === Mt || t === Lt) break e;
case ia:
if (r.last) {
(f >>>= 7 & d), (d -= 7 & d), (r.mode = pa);
break;
}
for (; d < 3; ) {
if (0 === l) break e;
l--, (f += n[s++] << d), (d += 8);
}
switch (((r.last = 1 & f), (d -= 1), 3 & (f >>>= 1))) {
case 0:
r.mode = sa;
break;
case 1:
if ((Ma(r), (r.mode = ua), t === Lt)) {
(f >>>= 2), (d -= 2);
break e;
}
break;
case 2:
r.mode = ha;
break;
case 3:
(e.msg = "invalid block type"), (r.mode = ya);
}
(f >>>= 2), (d -= 2);
break;
case sa:
for (f >>>= 7 & d, d -= 7 & d; d < 32; ) {
if (0 === l) break e;
l--, (f += n[s++] << d), (d += 8);
}
if ((65535 & f) != ((f >>> 16) ^ 65535)) {
(e.msg = "invalid stored block lengths"), (r.mode = ya);
break;
}
if (((r.length = 65535 & f), (f = 0), (d = 0), (r.mode = oa), t === Lt))
break e;
case oa:
r.mode = la;
case la:
if ((c = r.length)) {
if ((c > l && (c = l), c > h && (c = h), 0 === c)) break e;
a.arraySet(i, n, s, c, o),
(l -= c),
(s += c),
(h -= c),
(o += c),
(r.length -= c);
break;
}
r.mode = na;
break;
case ha:
for (; d < 14; ) {
if (0 === l) break e;
l--, (f += n[s++] << d), (d += 8);
}
if (
((r.nlen = 257 + (31 & f)),
(f >>>= 5),
(d -= 5),
(r.ndist = 1 + (31 & f)),
(f >>>= 5),
(d -= 5),
(r.ncode = 4 + (15 & f)),
(f >>>= 4),
(d -= 4),
r.nlen > 286 || r.ndist > 30)
) {
(e.msg = "too many length or distance symbols"), (r.mode = ya);
break;
}
(r.have = 0), (r.mode = fa);
case fa:
for (; r.have < r.ncode; ) {
for (; d < 3; ) {
if (0 === l) break e;
l--, (f += n[s++] << d), (d += 8);
}
(r.lens[E[r.have++]] = 7 & f), (f >>>= 3), (d -= 3);
}
for (; r.have < 19; ) r.lens[E[r.have++]] = 0;
if (
((r.lencode = r.lendyn),
(r.lenbits = 7),
(A = {bits: r.lenbits}),
(z = Tt(Zt, r.lens, 0, 19, r.lencode, 0, r.work, A)),
(r.lenbits = A.bits),
z)
) {
(e.msg = "invalid code lengths set"), (r.mode = ya);
break;
}
(r.have = 0), (r.mode = da);
case da:
for (; r.have < r.nlen + r.ndist; ) {
for (
;
(v = ((S = r.lencode[f & ((1 << r.lenbits) - 1)]) >>> 16) & 255),
(p = 65535 & S),
!((w = S >>> 24) <= d);

) {
if (0 === l) break e;
l--, (f += n[s++] << d), (d += 8);
}
if (p < 16) (f >>>= w), (d -= w), (r.lens[r.have++] = p);
else {
if (16 === p) {
for (B = w + 2; d < B; ) {
if (0 === l) break e;
l--, (f += n[s++] << d), (d += 8);
}
if (((f >>>= w), (d -= w), 0 === r.have)) {
(e.msg = "invalid bit length repeat"), (r.mode = ya);
break;
}
(x = r.lens[r.have - 1]), (c = 3 + (3 & f)), (f >>>= 2), (d -= 2);
} else if (17 === p) {
for (B = w + 3; d < B; ) {
if (0 === l) break e;
l--, (f += n[s++] << d), (d += 8);
}
(d -= w), (x = 0), (c = 3 + (7 & (f >>>= w))), (f >>>= 3), (d -= 3);
} else {
for (B = w + 7; d < B; ) {
if (0 === l) break e;
l--, (f += n[s++] << d), (d += 8);
}
(d -= w), (x = 0), (c = 11 + (127 & (f >>>= w))), (f >>>= 7), (d -= 7);
}
if (r.have + c > r.nlen + r.ndist) {
(e.msg = "invalid bit length repeat"), (r.mode = ya);
break;
}
for (; c--; ) r.lens[r.have++] = x;
}
}
if (r.mode === ya) break;
if (0 === r.lens[256]) {
(e.msg = "invalid code -- missing end-of-block"), (r.mode = ya);
break;
}
if (
((r.lenbits = 9),
(A = {bits: r.lenbits}),
(z = Tt(Nt, r.lens, 0, r.nlen, r.lencode, 0, r.work, A)),
(r.lenbits = A.bits),
z)
) {
(e.msg = "invalid literal/lengths set"), (r.mode = ya);
break;
}
if (
((r.distbits = 6),
(r.distcode = r.distdyn),
(A = {bits: r.distbits}),
(z = Tt(Ct, r.lens, r.nlen, r.ndist, r.distcode, 0, r.work, A)),
(r.distbits = A.bits),
z)
) {
(e.msg = "invalid distances set"), (r.mode = ya);
break;
}
if (((r.mode = ua), t === Lt)) break e;
case ua:
r.mode = _a;
case _a:
if (l >= 6 && h >= 258) {
(e.next_out = o),
(e.avail_out = h),
(e.next_in = s),
(e.avail_in = l),
(r.hold = f),
(r.bits = d),
St(e, _),
(o = e.next_out),
(i = e.output),
(h = e.avail_out),
(s = e.next_in),
(n = e.input),
(l = e.avail_in),
(f = r.hold),
(d = r.bits),
r.mode === na && (r.back = -1);
break;
}
for (
r.back = 0;
(v = ((S = r.lencode[f & ((1 << r.lenbits) - 1)]) >>> 16) & 255),
(p = 65535 & S),
!((w = S >>> 24) <= d);

) {
if (0 === l) break e;
l--, (f += n[s++] << d), (d += 8);
}
if (v && 0 == (240 & v)) {
for (
m = w, k = v, y = p;
(v = ((S = r.lencode[y + ((f & ((1 << (m + k)) - 1)) >> m)]) >>> 16) & 255),
(p = 65535 & S),
!(m + (w = S >>> 24) <= d);

) {
if (0 === l) break e;
l--, (f += n[s++] << d), (d += 8);
}
(f >>>= m), (d -= m), (r.back += m);
}
if (((f >>>= w), (d -= w), (r.back += w), (r.length = p), 0 === v)) {
r.mode = va;
break;
}
if (32 & v) {
(r.back = -1), (r.mode = na);
break;
}
if (64 & v) {
(e.msg = "invalid literal/length code"), (r.mode = ya);
break;
}
(r.extra = 15 & v), (r.mode = ca);
case ca:
if (r.extra) {
for (B = r.extra; d < B; ) {
if (0 === l) break e;
l--, (f += n[s++] << d), (d += 8);
}
(r.length += f & ((1 << r.extra) - 1)),
(f >>>= r.extra),
(d -= r.extra),
(r.back += r.extra);
}
(r.was = r.length), (r.mode = ga);
case ga:
for (
;
(v = ((S = r.distcode[f & ((1 << r.distbits) - 1)]) >>> 16) & 255),
(p = 65535 & S),
!((w = S >>> 24) <= d);

) {
if (0 === l) break e;
l--, (f += n[s++] << d), (d += 8);
}
if (0 == (240 & v)) {
for (
m = w, k = v, y = p;
(v = ((S = r.distcode[y + ((f & ((1 << (m + k)) - 1)) >> m)]) >>> 16) & 255),
(p = 65535 & S),
!(m + (w = S >>> 24) <= d);

) {
if (0 === l) break e;
l--, (f += n[s++] << d), (d += 8);
}
(f >>>= m), (d -= m), (r.back += m);
}
if (((f >>>= w), (d -= w), (r.back += w), 64 & v)) {
(e.msg = "invalid distance code"), (r.mode = ya);
break;
}
(r.offset = p), (r.extra = 15 & v), (r.mode = ba);
case ba:
if (r.extra) {
for (B = r.extra; d < B; ) {
if (0 === l) break e;
l--, (f += n[s++] << d), (d += 8);
}
(r.offset += f & ((1 << r.extra) - 1)),
(f >>>= r.extra),
(d -= r.extra),
(r.back += r.extra);
}
if (r.offset > r.dmax) {
(e.msg = "invalid distance too far back"), (r.mode = ya);
break;
}
r.mode = wa;
case wa:
if (0 === h) break e;
if (((c = _ - h), r.offset > c)) {
if ((c = r.offset - c) > r.whave && r.sane) {
(e.msg = "invalid distance too far back"), (r.mode = ya);
break;
}
c > r.wnext ? ((c -= r.wnext), (g = r.wsize - c)) : (g = r.wnext - c),
c > r.length && (c = r.length),
(b = r.window);
} else (b = i), (g = o - r.offset), (c = r.length);
c > h && (c = h), (h -= c), (r.length -= c);
do {
i[o++] = b[g++];
} while (--c);
0 === r.length && (r.mode = _a);
break;
case va:
if (0 === h) break e;
(i[o++] = r.length), h--, (r.mode = _a);
break;
case pa:
if (r.wrap) {
for (; d < 32; ) {
if (0 === l) break e;
l--, (f |= n[s++] << d), (d += 8);
}
if (
((_ -= h),
(e.total_out += _),
(r.total += _),
_ &&
(e.adler = r.check = r.flags
? ie(r.check, i, _, o - _)
: ae(r.check, i, _, o - _)),
(_ = h),
(r.flags ? f : Ua(f)) !== r.check)
) {
(e.msg = "incorrect data check"), (r.mode = ya);
break;
}
(f = 0), (d = 0);
}
r.mode = ma;
case ma:
if (r.wrap && r.flags) {
for (; d < 32; ) {
if (0 === l) break e;
l--, (f += n[s++] << d), (d += 8);
}
if (f !== (4294967295 & r.total)) {
(e.msg = "incorrect length check"), (r.mode = ya);
break;
}
(f = 0), (d = 0);
}
r.mode = ka;
case ka:
z = qt;
break e;
case ya:
z = Ht;
break e;
case xa:
return jt;
case za:
default:
return Pt;
}
return (
(e.next_out = o),
(e.avail_out = h),
(e.next_in = s),
(e.avail_in = l),
(r.hold = f),
(r.bits = d),
(r.wsize || (_ !== e.avail_out && r.mode < ya && (r.mode < pa || t !== Dt))) &&
La(e, e.output, e.next_out, _ - e.avail_out),
(u -= e.avail_in),
(_ -= e.avail_out),
(e.total_in += u),
(e.total_out += _),
(r.total += _),
r.wrap &&
_ &&
(e.adler = r.check = r.flags
? ie(r.check, i, _, e.next_out - _)
: ae(r.check, i, _, e.next_out - _)),
(e.data_type =
r.bits +
(r.last ? 64 : 0) +
(r.mode === na ? 128 : 0) +
(r.mode === ua || r.mode === oa ? 256 : 0)),
((0 === u && 0 === _) || t === Dt) && z === Ot && (z = Gt),
z
);
},
inflateEnd: function(e) {
if (!e || !e.state) return Pt;
var t = e.state;
return t.window && (t.window = null), (e.state = null), Ot;
},
inflateGetHeader: function(e, t) {
var a;
return e && e.state
? 0 == (2 & (a = e.state).wrap)
  ? Pt
  : ((a.head = t), (t.done = !1), Ot)
: Pt;
},
inflateSetDictionary: function(e, t) {
var a,
r = t.length;
return e && e.state
? 0 !== (a = e.state).wrap && a.mode !== ra
  ? Pt
  : a.mode === ra && ae(1, t, r, 0) !== a.check
  ? Ht
  : La(e, t, r, r)
  ? ((a.mode = xa), jt)
  : ((a.havedict = 1), Ot)
: Pt;
},
inflateInfo: "pako inflate (from Nodeca project)"
},
qa = {
Z_NO_FLUSH: 0,
Z_PARTIAL_FLUSH: 1,
Z_SYNC_FLUSH: 2,
Z_FULL_FLUSH: 3,
Z_FINISH: 4,
Z_BLOCK: 5,
Z_TREES: 6,
Z_OK: 0,
Z_STREAM_END: 1,
Z_NEED_DICT: 2,
Z_ERRNO: -1,
Z_STREAM_ERROR: -2,
Z_DATA_ERROR: -3,
Z_BUF_ERROR: -5,
Z_NO_COMPRESSION: 0,
Z_BEST_SPEED: 1,
Z_BEST_COMPRESSION: 9,
Z_DEFAULT_COMPRESSION: -1,
Z_FILTERED: 1,
Z_HUFFMAN_ONLY: 2,
Z_RLE: 3,
Z_FIXED: 4,
Z_DEFAULT_STRATEGY: 0,
Z_BINARY: 0,
Z_TEXT: 1,
Z_UNKNOWN: 2,
Z_DEFLATED: 8
};
var Fa = function() {
(this.text = 0),
(this.time = 0),
(this.xflags = 0),
(this.os = 0),
(this.extra = null),
(this.extra_len = 0),
(this.name = ""),
(this.comment = ""),
(this.hcrc = 0),
(this.done = !1);
},
Pa = Object.prototype.toString;
function Ha(e) {
if (!(this instanceof Ha)) return new Ha(e);
this.options = a.assign({chunkSize: 16384, windowBits: 0, to: ""}, e || {});
var t = this.options;
t.raw &&
t.windowBits >= 0 &&
t.windowBits < 16 &&
((t.windowBits = -t.windowBits), 0 === t.windowBits && (t.windowBits = -15)),
!(t.windowBits >= 0 && t.windowBits < 16) ||
(e && e.windowBits) ||
(t.windowBits += 32),
t.windowBits > 15 &&
t.windowBits < 48 &&
0 == (15 & t.windowBits) &&
(t.windowBits |= 15),
(this.err = 0),
(this.msg = ""),
(this.ended = !1),
(this.chunks = []),
(this.strm = new vt()),
(this.strm.avail_out = 0);
var r = Oa.inflateInit2(this.strm, t.windowBits);
if (r !== qa.Z_OK) throw new Error(se[r]);
if (
((this.header = new Fa()),
Oa.inflateGetHeader(this.strm, this.header),
t.dictionary &&
("string" == typeof t.dictionary
? (t.dictionary = wt.string2buf(t.dictionary))
: "[object ArrayBuffer]" === Pa.call(t.dictionary) &&
  (t.dictionary = new Uint8Array(t.dictionary)),
t.raw && (r = Oa.inflateSetDictionary(this.strm, t.dictionary)) !== qa.Z_OK))
)
throw new Error(se[r]);
}
function ja(e, t) {
var a = new Ha(t);
if ((a.push(e, !0), a.err)) throw a.msg || se[a.err];
return a.result;
}
(Ha.prototype.push = function(e, t) {
var r,
n,
i,
s,
o,
l = this.strm,
h = this.options.chunkSize,
f = this.options.dictionary,
d = !1;
if (this.ended) return !1;
(n = t === ~~t ? t : !0 === t ? qa.Z_FINISH : qa.Z_NO_FLUSH),
"string" == typeof e
? (l.input = wt.binstring2buf(e))
: "[object ArrayBuffer]" === Pa.call(e)
? (l.input = new Uint8Array(e))
: (l.input = e),
(l.next_in = 0),
(l.avail_in = l.input.length);
do {
if (
(0 === l.avail_out &&
((l.output = new a.Buf8(h)), (l.next_out = 0), (l.avail_out = h)),
(r = Oa.inflate(l, qa.Z_NO_FLUSH)) === qa.Z_NEED_DICT &&
f &&
(r = Oa.inflateSetDictionary(this.strm, f)),
r === qa.Z_BUF_ERROR && !0 === d && ((r = qa.Z_OK), (d = !1)),
r !== qa.Z_STREAM_END && r !== qa.Z_OK)
)
return this.onEnd(r), (this.ended = !0), !1;
l.next_out &&
((0 !== l.avail_out &&
r !== qa.Z_STREAM_END &&
(0 !== l.avail_in || (n !== qa.Z_FINISH && n !== qa.Z_SYNC_FLUSH))) ||
("string" === this.options.to
? ((i = wt.utf8border(l.output, l.next_out)),
  (s = l.next_out - i),
  (o = wt.buf2string(l.output, i)),
  (l.next_out = s),
  (l.avail_out = h - s),
  s && a.arraySet(l.output, l.output, i, s, 0),
  this.onData(o))
: this.onData(a.shrinkBuf(l.output, l.next_out)))),
0 === l.avail_in && 0 === l.avail_out && (d = !0);
} while ((l.avail_in > 0 || 0 === l.avail_out) && r !== qa.Z_STREAM_END);
return (
r === qa.Z_STREAM_END && (n = qa.Z_FINISH),
n === qa.Z_FINISH
? ((r = Oa.inflateEnd(this.strm)),
  this.onEnd(r),
  (this.ended = !0),
  r === qa.Z_OK)
: n !== qa.Z_SYNC_FLUSH || (this.onEnd(qa.Z_OK), (l.avail_out = 0), !0)
);
}),
(Ha.prototype.onData = function(e) {
this.chunks.push(e);
}),
(Ha.prototype.onEnd = function(e) {
e === qa.Z_OK &&
("string" === this.options.to
? (this.result = this.chunks.join(""))
: (this.result = a.flattenChunks(this.chunks))),
(this.chunks = []),
(this.err = e),
(this.msg = this.strm.msg);
});
var Ga = {
Inflate: Ha,
inflate: ja,
inflateRaw: function(e, t) {
return ((t = t || {}).raw = !0), ja(e, t);
},
ungzip: ja
},
Ka = {};
(0, a.assign)(Ka, Bt, Ga, qa);
var Ya = Ka,
Xa = t(function(e) {
var t;
(t = {}),
(e.exports = t),
(function(e, t) {
(e.toRGBA8 = function(t) {
var a = t.width,
r = t.height;
if (null == t.tabs.acTL) return [e.toRGBA8.decodeImage(t.data, a, r, t).buffer];
var n = [];
null == t.frames[0].data && (t.frames[0].data = t.data);
for (var i, s = new Uint8Array(a * r * 4), o = 0; o < t.frames.length; o++) {
var l = t.frames[o],
h = l.rect.x,
f = l.rect.y,
d = l.rect.width,
u = l.rect.height,
_ = e.toRGBA8.decodeImage(l.data, d, u, t);
if (
(0 == o
? (i = _)
: 0 == l.blend
? e._copyTile(_, d, u, i, a, r, h, f, 0)
: 1 == l.blend && e._copyTile(_, d, u, i, a, r, h, f, 1),
n.push(i.buffer),
(i = i.slice(0)),
0 == l.dispose)
);
else if (1 == l.dispose) e._copyTile(s, d, u, i, a, r, h, f, 0);
else if (2 == l.dispose) {
for (var c = o - 1; 2 == t.frames[c].dispose; ) c--;
i = new Uint8Array(n[c]).slice(0);
}
}
return n;
}),
(e.toRGBA8.decodeImage = function(t, a, r, n) {
var i = a * r,
s = e.decode._getBPP(n),
o = Math.ceil((a * s) / 8),
l = new Uint8Array(4 * i),
h = new Uint32Array(l.buffer),
f = n.ctype,
d = n.depth,
u = e._bin.readUshort;
if (6 == f) {
var _ = i << 2;
if (8 == d) for (var c = 0; c < _; c++) l[c] = t[c];
if (16 == d) for (c = 0; c < _; c++) l[c] = t[c << 1];
} else if (2 == f) {
var g = n.tabs.tRNS,
b = -1,
w = -1,
v = -1;
if ((g && ((b = g[0]), (w = g[1]), (v = g[2])), 8 == d))
for (c = 0; c < i; c++) {
var p = 3 * c;
(l[(B = c << 2)] = t[p]),
(l[B + 1] = t[p + 1]),
(l[B + 2] = t[p + 2]),
(l[B + 3] = 255),
-1 != b && t[p] == b && t[p + 1] == w && t[p + 2] == v && (l[B + 3] = 0);
}
if (16 == d)
for (c = 0; c < i; c++)
(p = 6 * c),
(l[(B = c << 2)] = t[p]),
(l[B + 1] = t[p + 2]),
(l[B + 2] = t[p + 4]),
(l[B + 3] = 255),
-1 != b &&
u(t, p) == b &&
u(t, p + 2) == w &&
u(t, p + 4) == v &&
(l[B + 3] = 0);
} else if (3 == f) {
var m = n.tabs.PLTE,
k = n.tabs.tRNS,
y = k ? k.length : 0;
if (1 == d)
for (var x = 0; x < r; x++) {
var z = x * o,
A = x * a;
for (c = 0; c < a; c++) {
var B = (A + c) << 2,
S = 3 * (U = (t[z + (c >> 3)] >> (7 - ((7 & c) << 0))) & 1);
(l[B] = m[S]),
(l[B + 1] = m[S + 1]),
(l[B + 2] = m[S + 2]),
(l[B + 3] = U < y ? k[U] : 255);
}
}
if (2 == d)
for (x = 0; x < r; x++)
for (z = x * o, A = x * a, c = 0; c < a; c++)
(B = (A + c) << 2),
(S = 3 * (U = (t[z + (c >> 2)] >> (6 - ((3 & c) << 1))) & 3)),
(l[B] = m[S]),
(l[B + 1] = m[S + 1]),
(l[B + 2] = m[S + 2]),
(l[B + 3] = U < y ? k[U] : 255);
if (4 == d)
for (x = 0; x < r; x++)
for (z = x * o, A = x * a, c = 0; c < a; c++)
(B = (A + c) << 2),
(S = 3 * (U = (t[z + (c >> 1)] >> (4 - ((1 & c) << 2))) & 15)),
(l[B] = m[S]),
(l[B + 1] = m[S + 1]),
(l[B + 2] = m[S + 2]),
(l[B + 3] = U < y ? k[U] : 255);
if (8 == d)
for (c = 0; c < i; c++) {
var U;
(B = c << 2),
(S = 3 * (U = t[c])),
(l[B] = m[S]),
(l[B + 1] = m[S + 1]),
(l[B + 2] = m[S + 2]),
(l[B + 3] = U < y ? k[U] : 255);
}
} else if (4 == f) {
if (8 == d)
for (c = 0; c < i; c++) {
B = c << 2;
var E = t[(R = c << 1)];
(l[B] = E), (l[B + 1] = E), (l[B + 2] = E), (l[B + 3] = t[R + 1]);
}
if (16 == d)
for (c = 0; c < i; c++) {
var R;
(B = c << 2),
(E = t[(R = c << 2)]),
(l[B] = E),
(l[B + 1] = E),
(l[B + 2] = E),
(l[B + 3] = t[R + 2]);
}
} else if (0 == f) {
if (((b = n.tabs.tRNS ? n.tabs.tRNS : -1), 1 == d))
for (c = 0; c < i; c++) {
var I = (E = 255 * ((t[c >> 3] >> (7 - (7 & c))) & 1)) == 255 * b ? 0 : 255;
h[c] = (I << 24) | (E << 16) | (E << 8) | E;
}
if (2 == d)
for (c = 0; c < i; c++)
(I = (E = 85 * ((t[c >> 2] >> (6 - ((3 & c) << 1))) & 3)) == 85 * b ? 0 : 255),
(h[c] = (I << 24) | (E << 16) | (E << 8) | E);
if (4 == d)
for (c = 0; c < i; c++)
(I = (E = 17 * ((t[c >> 1] >> (4 - ((1 & c) << 2))) & 15)) == 17 * b ? 0 : 255),
(h[c] = (I << 24) | (E << 16) | (E << 8) | E);
if (8 == d)
for (c = 0; c < i; c++)
(I = (E = t[c]) == b ? 0 : 255), (h[c] = (I << 24) | (E << 16) | (E << 8) | E);
if (16 == d)
for (c = 0; c < i; c++)
(E = t[c << 1]),
(I = u(t, c << 1) == b ? 0 : 255),
(h[c] = (I << 24) | (E << 16) | (E << 8) | E);
}
return l;
}),
(e.decode = function(t) {
for (
var a,
r = new Uint8Array(t),
n = 8,
i = e._bin,
s = i.readUshort,
o = i.readUint,
l = {tabs: {}, frames: []},
h = new Uint8Array(r.length),
f = 0,
d = 0,
u = [137, 80, 78, 71, 13, 10, 26, 10],
_ = 0;
_ < 8;
_++
)
if (r[_] != u[_]) throw "The input is not a PNG file!";
for (; n < r.length; ) {
var c = i.readUint(r, n);
n += 4;
var g = i.readASCII(r, n, 4);
if (((n += 4), "IHDR" == g)) e.decode._IHDR(r, n, l);
else if ("IDAT" == g) {
for (_ = 0; _ < c; _++) h[f + _] = r[n + _];
f += c;
} else if ("acTL" == g)
(l.tabs[g] = {num_frames: o(r, n), num_plays: o(r, n + 4)}),
(a = new Uint8Array(r.length));
else if ("fcTL" == g) {
0 != d &&
(((z = l.frames[l.frames.length - 1]).data = e.decode._decompress(
l,
a.slice(0, d),
z.rect.width,
z.rect.height
)),
(d = 0));
var b = {
x: o(r, n + 12),
y: o(r, n + 16),
width: o(r, n + 4),
height: o(r, n + 8)
},
w = s(r, n + 22);
w = s(r, n + 20) / (0 == w ? 100 : w);
var v = {
rect: b,
delay: Math.round(1e3 * w),
dispose: r[n + 24],
blend: r[n + 25]
};
l.frames.push(v);
} else if ("fdAT" == g) {
for (_ = 0; _ < c - 4; _++) a[d + _] = r[n + _ + 4];
d += c - 4;
} else if ("pHYs" == g)
l.tabs[g] = [i.readUint(r, n), i.readUint(r, n + 4), r[n + 8]];
else if ("cHRM" == g)
for (l.tabs[g] = [], _ = 0; _ < 8; _++)
l.tabs[g].push(i.readUint(r, n + 4 * _));
else if ("tEXt" == g) {
null == l.tabs[g] && (l.tabs[g] = {});
var p = i.nextZero(r, n),
m = i.readASCII(r, n, p - n),
k = i.readASCII(r, p + 1, n + c - p - 1);
l.tabs[g][m] = k;
} else if ("iTXt" == g) {
null == l.tabs[g] && (l.tabs[g] = {}), (p = 0);
var y = n;
(p = i.nextZero(r, y)),
(m = i.readASCII(r, y, p - y)),
(y = p + 1),
(y += 2),
(p = i.nextZero(r, y)),
i.readASCII(r, y, p - y),
(y = p + 1),
(p = i.nextZero(r, y)),
i.readUTF8(r, y, p - y),
(y = p + 1),
(k = i.readUTF8(r, y, c - (y - n))),
(l.tabs[g][m] = k);
} else if ("PLTE" == g) l.tabs[g] = i.readBytes(r, n, c);
else if ("hIST" == g) {
var x = l.tabs.PLTE.length / 3;
for (l.tabs[g] = [], _ = 0; _ < x; _++) l.tabs[g].push(s(r, n + 2 * _));
} else if ("tRNS" == g)
3 == l.ctype
? (l.tabs[g] = i.readBytes(r, n, c))
: 0 == l.ctype
? (l.tabs[g] = s(r, n))
: 2 == l.ctype && (l.tabs[g] = [s(r, n), s(r, n + 2), s(r, n + 4)]);
else if ("gAMA" == g) l.tabs[g] = i.readUint(r, n) / 1e5;
else if ("sRGB" == g) l.tabs[g] = r[n];
else if ("bKGD" == g)
0 == l.ctype || 4 == l.ctype
? (l.tabs[g] = [s(r, n)])
: 2 == l.ctype || 6 == l.ctype
? (l.tabs[g] = [s(r, n), s(r, n + 2), s(r, n + 4)])
: 3 == l.ctype && (l.tabs[g] = r[n]);
else if ("IEND" == g) {
var z;
0 != d &&
(((z = l.frames[l.frames.length - 1]).data = e.decode._decompress(
l,
a.slice(0, d),
z.rect.width,
z.rect.height
)),
(d = 0)),
(l.data = e.decode._decompress(l, h, l.width, l.height));
break;
}
(n += c), i.readUint(r, n), (n += 4);
}
return delete l.compress, delete l.interlace, delete l.filter, l;
}),
(e.decode._decompress = function(t, a, r, n) {
return (
0 == t.compress && (a = e.decode._inflate(a)),
0 == t.interlace
? (a = e.decode._filterZero(a, t, 0, r, n))
: 1 == t.interlace && (a = e.decode._readInterlace(a, t)),
a
);
}),
(e.decode._inflate = function(e) {
return t.inflate(e);
}),
(e.decode._readInterlace = function(t, a) {
for (
var r = a.width,
n = a.height,
i = e.decode._getBPP(a),
s = i >> 3,
o = Math.ceil((r * i) / 8),
l = new Uint8Array(n * o),
h = 0,
f = [0, 0, 4, 0, 2, 0, 1],
d = [0, 4, 0, 2, 0, 1, 0],
u = [8, 8, 8, 4, 4, 2, 2],
_ = [8, 8, 4, 4, 2, 2, 1],
c = 0;
c < 7;

) {
for (var g = u[c], b = _[c], w = 0, v = 0, p = f[c]; p < n; ) (p += g), v++;
for (var m = d[c]; m < r; ) (m += b), w++;
var k = Math.ceil((w * i) / 8);
e.decode._filterZero(t, a, h, w, v);
for (var y = 0, x = f[c]; x < n; ) {
for (var z = d[c], A = (h + y * k) << 3; z < r; ) {
var B;
if (
(1 == i &&
((B = ((B = t[A >> 3]) >> (7 - (7 & A))) & 1),
(l[x * o + (z >> 3)] |= B << (7 - ((3 & z) << 0)))),
2 == i &&
((B = ((B = t[A >> 3]) >> (6 - (7 & A))) & 3),
(l[x * o + (z >> 2)] |= B << (6 - ((3 & z) << 1)))),
4 == i &&
((B = ((B = t[A >> 3]) >> (4 - (7 & A))) & 15),
(l[x * o + (z >> 1)] |= B << (4 - ((1 & z) << 2)))),
i >= 8)
)
for (var S = x * o + z * s, U = 0; U < s; U++) l[S + U] = t[(A >> 3) + U];
(A += i), (z += b);
}
y++, (x += g);
}
w * v != 0 && (h += v * (1 + k)), (c += 1);
}
return l;
}),
(e.decode._getBPP = function(e) {
return [1, null, 3, 1, 2, null, 4][e.ctype] * e.depth;
}),
(e.decode._filterZero = function(t, a, r, n, i) {
var s = e.decode._getBPP(a),
o = Math.ceil((n * s) / 8),
l = e.decode._paeth;
s = Math.ceil(s / 8);
for (var h = 0; h < i; h++) {
var f = r + h * o,
d = f + h + 1,
u = t[d - 1];
if (0 == u) for (var _ = 0; _ < o; _++) t[f + _] = t[d + _];
else if (1 == u) {
for (_ = 0; _ < s; _++) t[f + _] = t[d + _];
for (_ = s; _ < o; _++) t[f + _] = (t[d + _] + t[f + _ - s]) & 255;
} else if (0 == h) {
for (_ = 0; _ < s; _++) t[f + _] = t[d + _];
if (2 == u) for (_ = s; _ < o; _++) t[f + _] = 255 & t[d + _];
if (3 == u)
for (_ = s; _ < o; _++) t[f + _] = (t[d + _] + (t[f + _ - s] >> 1)) & 255;
if (4 == u)
for (_ = s; _ < o; _++) t[f + _] = (t[d + _] + l(t[f + _ - s], 0, 0)) & 255;
} else {
if (2 == u) for (_ = 0; _ < o; _++) t[f + _] = (t[d + _] + t[f + _ - o]) & 255;
if (3 == u) {
for (_ = 0; _ < s; _++) t[f + _] = (t[d + _] + (t[f + _ - o] >> 1)) & 255;
for (_ = s; _ < o; _++)
t[f + _] = (t[d + _] + ((t[f + _ - o] + t[f + _ - s]) >> 1)) & 255;
}
if (4 == u) {
for (_ = 0; _ < s; _++) t[f + _] = (t[d + _] + l(0, t[f + _ - o], 0)) & 255;
for (_ = s; _ < o; _++)
t[f + _] = (t[d + _] + l(t[f + _ - s], t[f + _ - o], t[f + _ - s - o])) & 255;
}
}
}
return t;
}),
(e.decode._paeth = function(e, t, a) {
var r = e + t - a,
n = Math.abs(r - e),
i = Math.abs(r - t),
s = Math.abs(r - a);
return n <= i && n <= s ? e : i <= s ? t : a;
}),
(e.decode._IHDR = function(t, a, r) {
var n = e._bin;
(r.width = n.readUint(t, a)),
(a += 4),
(r.height = n.readUint(t, a)),
(a += 4),
(r.depth = t[a]),
a++,
(r.ctype = t[a]),
a++,
(r.compress = t[a]),
a++,
(r.filter = t[a]),
a++,
(r.interlace = t[a]),
a++;
}),
(e._bin = {
nextZero: function(e, t) {
for (; 0 != e[t]; ) t++;
return t;
},
readUshort: function(e, t) {
return (e[t] << 8) | e[t + 1];
},
writeUshort: function(e, t, a) {
(e[t] = (a >> 8) & 255), (e[t + 1] = 255 & a);
},
readUint: function(e, t) {
return 16777216 * e[t] + ((e[t + 1] << 16) | (e[t + 2] << 8) | e[t + 3]);
},
writeUint: function(e, t, a) {
(e[t] = (a >> 24) & 255),
(e[t + 1] = (a >> 16) & 255),
(e[t + 2] = (a >> 8) & 255),
(e[t + 3] = 255 & a);
},
readASCII: function(e, t, a) {
for (var r = "", n = 0; n < a; n++) r += String.fromCharCode(e[t + n]);
return r;
},
writeASCII: function(e, t, a) {
for (var r = 0; r < a.length; r++) e[t + r] = a.charCodeAt(r);
},
readBytes: function(e, t, a) {
for (var r = [], n = 0; n < a; n++) r.push(e[t + n]);
return r;
},
pad: function(e) {
return e.length < 2 ? "0" + e : e;
},
readUTF8: function(t, a, r) {
for (var n, i = "", s = 0; s < r; s++)
i += "%" + e._bin.pad(t[a + s].toString(16));
try {
n = decodeURIComponent(i);
} catch (n) {
return e._bin.readASCII(t, a, r);
}
return n;
}
}),
(e._copyTile = function(e, t, a, r, n, i, s, o, l) {
for (
var h = Math.min(t, n), f = Math.min(a, i), d = 0, u = 0, _ = 0;
_ < f;
_++
)
for (var c = 0; c < h; c++)
if (
(s >= 0 && o >= 0
? ((d = (_ * t + c) << 2), (u = ((o + _) * n + s + c) << 2))
: ((d = ((-o + _) * t - s + c) << 2), (u = (_ * n + c) << 2)),
0 == l)
)
(r[u] = e[d]),
(r[u + 1] = e[d + 1]),
(r[u + 2] = e[d + 2]),
(r[u + 3] = e[d + 3]);
else if (1 == l) {
var g = e[d + 3] * (1 / 255),
b = e[d] * g,
w = e[d + 1] * g,
v = e[d + 2] * g,
p = r[u + 3] * (1 / 255),
m = r[u] * p,
k = r[u + 1] * p,
y = r[u + 2] * p,
x = 1 - g,
z = g + p * x,
A = 0 == z ? 0 : 1 / z;
(r[u + 3] = 255 * z),
(r[u + 0] = (b + m * x) * A),
(r[u + 1] = (w + k * x) * A),
(r[u + 2] = (v + y * x) * A);
} else if (2 == l)
(g = e[d + 3]),
(b = e[d]),
(w = e[d + 1]),
(v = e[d + 2]),
(p = r[u + 3]),
(m = r[u]),
(k = r[u + 1]),
(y = r[u + 2]),
g == p && b == m && w == k && v == y
? ((r[u] = 0), (r[u + 1] = 0), (r[u + 2] = 0), (r[u + 3] = 0))
: ((r[u] = b), (r[u + 1] = w), (r[u + 2] = v), (r[u + 3] = g));
else if (3 == l) {
if (
((g = e[d + 3]),
(b = e[d]),
(w = e[d + 1]),
(v = e[d + 2]),
(p = r[u + 3]),
(m = r[u]),
(k = r[u + 1]),
(y = r[u + 2]),
g == p && b == m && w == k && v == y)
)
continue;
if (g < 220 && p > 20) return !1;
}
return !0;
}),
(e.encode = function(t, a, r, n, i, s) {
null == n && (n = 0), null == s && (s = !1);
for (
var o = new Uint8Array(t[0].byteLength * t.length + 100),
l = [137, 80, 78, 71, 13, 10, 26, 10],
h = 0;
h < 8;
h++
)
o[h] = l[h];
var f = 8,
d = e._bin,
u = e.crc.crc,
_ = d.writeUint,
c = d.writeUshort,
g = d.writeASCII,
b = e.encode.compressPNG(t, a, r, n, s);
_(o, f, 13),
g(o, (f += 4), "IHDR"),
_(o, (f += 4), a),
_(o, (f += 4), r),
(o[(f += 4)] = b.depth),
(o[++f] = b.ctype),
(o[++f] = 0),
(o[++f] = 0),
(o[++f] = 0),
_(o, ++f, u(o, f - 17, 17)),
_(o, (f += 4), 1),
g(o, (f += 4), "sRGB"),
(o[(f += 4)] = 1),
_(o, ++f, u(o, f - 5, 5)),
(f += 4);
var w = t.length > 1;
if (
(w &&
(_(o, f, 8),
g(o, (f += 4), "acTL"),
_(o, (f += 4), t.length),
_(o, (f += 4), 0),
_(o, (f += 4), u(o, f - 12, 12)),
(f += 4)),
3 == b.ctype)
) {
for (
_(o, f, 3 * (B = b.plte.length)), g(o, (f += 4), "PLTE"), f += 4, h = 0;
h < B;
h++
) {
var v = 3 * h,
p = b.plte[h],
m = 255 & p,
k = (p >> 8) & 255,
y = (p >> 16) & 255;
(o[f + v + 0] = m), (o[f + v + 1] = k), (o[f + v + 2] = y);
}
if (
(_(o, (f += 3 * B), u(o, f - 3 * B - 4, 3 * B + 4)), (f += 4), b.gotAlpha)
) {
for (_(o, f, B), g(o, (f += 4), "tRNS"), f += 4, h = 0; h < B; h++)
o[f + h] = (b.plte[h] >> 24) & 255;
_(o, (f += B), u(o, f - B - 4, B + 4)), (f += 4);
}
}
for (var x = 0, z = 0; z < b.frames.length; z++) {
var A = b.frames[z];
w &&
(_(o, f, 26),
g(o, (f += 4), "fcTL"),
_(o, (f += 4), x++),
_(o, (f += 4), A.rect.width),
_(o, (f += 4), A.rect.height),
_(o, (f += 4), A.rect.x),
_(o, (f += 4), A.rect.y),
c(o, (f += 4), i[z]),
c(o, (f += 2), 1e3),
(o[(f += 2)] = A.dispose),
(o[++f] = A.blend),
_(o, ++f, u(o, f - 30, 30)),
(f += 4));
var B,
S = A.cimg;
_(o, f, (B = S.length) + (0 == z ? 0 : 4));
var U = (f += 4);
for (
g(o, f, 0 == z ? "IDAT" : "fdAT"),
f += 4,
0 != z && (_(o, f, x++), (f += 4)),
h = 0;
h < B;
h++
)
o[f + h] = S[h];
_(o, (f += B), u(o, U, f - U)), (f += 4);
}
return (
_(o, f, 0),
g(o, (f += 4), "IEND"),
_(o, (f += 4), u(o, f - 4, 4)),
(f += 4),
o.buffer.slice(0, f)
);
}),
(e.encode.compressPNG = function(t, a, r, n, i) {
for (var s = e.encode.compress(t, a, r, n, !1, i), o = 0; o < t.length; o++) {
var l = s.frames[o],
h = (l.rect.width, l.rect.height),
f = l.bpl,
d = l.bpp,
u = new Uint8Array(h * f + h);
l.cimg = e.encode._filterZero(l.img, h, d, f, u);
}
return s;
}),
(e.encode.compress = function(t, a, r, n, i, s) {
null == s && (s = !1);
for (var o = 6, l = 8, h = 4, f = 255, d = 0; d < t.length; d++)
for (var u = new Uint8Array(t[d]), _ = u.length, c = 0; c < _; c += 4)
f &= u[c + 3];
var g = 255 != f,
b = {},
w = [];
if ((0 != t.length && ((b[0] = 0), w.push(0), 0 != n && n--), 0 != n)) {
var v = e.quantize(t, n, i);
for (t = v.bufs, c = 0; c < v.plte.length; c++)
null == b[(m = v.plte[c].est.rgba)] && ((b[m] = w.length), w.push(m));
} else
for (d = 0; d < t.length; d++) {
var p = new Uint32Array(t[d]);
for (_ = p.length, c = 0; c < _; c++) {
var m = p[c];
if (
(c < a || (m != p[c - 1] && m != p[c - a])) &&
null == b[m] &&
((b[m] = w.length), w.push(m), w.length >= 300)
)
break;
}
}
var k = !!g && i,
y = w.length;
y <= 256 &&
0 == s &&
((l = y <= 2 ? 1 : y <= 4 ? 2 : y <= 16 ? 4 : 8), i && (l = 8), (g = !0));
var x = [];
for (d = 0; d < t.length; d++) {
var z = new Uint8Array(t[d]),
A = new Uint32Array(z.buffer),
B = 0,
S = 0,
U = a,
E = r,
R = 0;
if (0 != d && !k) {
for (
var I = i || 1 == d || 2 == x[x.length - 2].dispose ? 1 : 2,
T = 0,
Z = 1e9,
N = 0;
N < I;
N++
) {
for (
var C = new Uint8Array(t[d - 1 - N]),
D = new Uint32Array(t[d - 1 - N]),
M = a,
L = r,
O = -1,
q = -1,
F = 0;
F < r;
F++
)
for (var P = 0; P < a; P++)
A[(c = F * a + P)] != D[c] &&
(P < M && (M = P), P > O && (O = P), F < L && (L = F), F > q && (q = F));
var H = -1 == O ? 1 : (O - M + 1) * (q - L + 1);
H < Z &&
((Z = H),
(T = N),
-1 == O
? ((B = S = 0), (U = E = 1))
: ((B = M), (S = L), (U = O - M + 1), (E = q - L + 1)));
}
(C = new Uint8Array(t[d - 1 - T])), 1 == T && (x[x.length - 1].dispose = 2);
var j = new Uint8Array(U * E * 4);
new Uint32Array(j.buffer),
e._copyTile(C, a, r, j, U, E, -B, -S, 0),
e._copyTile(z, a, r, j, U, E, -B, -S, 3)
? (e._copyTile(z, a, r, j, U, E, -B, -S, 2), (R = 1))
: (e._copyTile(z, a, r, j, U, E, -B, -S, 0), (R = 0)),
(z = j),
(A = new Uint32Array(z.buffer));
}
var G = 4 * U;
if (y <= 256 && 0 == s) {
for (G = Math.ceil((l * U) / 8), j = new Uint8Array(G * E), F = 0; F < E; F++) {
c = F * G;
var K = F * U;
if (8 == l) for (P = 0; P < U; P++) j[c + P] = b[A[K + P]];
else if (4 == l)
for (P = 0; P < U; P++) j[c + (P >> 1)] |= b[A[K + P]] << (4 - 4 * (1 & P));
else if (2 == l)
for (P = 0; P < U; P++) j[c + (P >> 2)] |= b[A[K + P]] << (6 - 2 * (3 & P));
else if (1 == l)
for (P = 0; P < U; P++) j[c + (P >> 3)] |= b[A[K + P]] << (7 - 1 * (7 & P));
}
(z = j), (o = 3), (h = 1);
} else if (0 == g && 1 == t.length) {
j = new Uint8Array(U * E * 3);
var Y = U * E;
for (c = 0; c < Y; c++) {
var X = 3 * c,
V = 4 * c;
(j[X] = z[V]), (j[X + 1] = z[V + 1]), (j[X + 2] = z[V + 2]);
}
(z = j), (o = 2), (h = 3), (G = 3 * U);
}
x.push({
rect: {x: B, y: S, width: U, height: E},
img: z,
bpl: G,
bpp: h,
blend: R,
dispose: k ? 1 : 0
});
}
return {ctype: o, depth: l, plte: w, gotAlpha: g, frames: x};
}),
(e.encode._filterZero = function(a, r, n, i, s) {
for (var o = [], l = 0; l < 5; l++)
if (!(r * i > 5e5) || (2 != l && 3 != l && 4 != l)) {
for (var h = 0; h < r; h++) e.encode._filterLine(s, a, h, i, n, l);
if ((o.push(t.deflate(s)), 1 == n)) break;
}
for (var f, d = 1e9, u = 0; u < o.length; u++)
o[u].length < d && ((f = u), (d = o[u].length));
return o[f];
}),
(e.encode._filterLine = function(t, a, r, n, i, s) {
var o = r * n,
l = o + r,
h = e.decode._paeth;
if (((t[l] = s), l++, 0 == s)) for (var f = 0; f < n; f++) t[l + f] = a[o + f];
else if (1 == s) {
for (f = 0; f < i; f++) t[l + f] = a[o + f];
for (f = i; f < n; f++) t[l + f] = (a[o + f] - a[o + f - i] + 256) & 255;
} else if (0 == r) {
for (f = 0; f < i; f++) t[l + f] = a[o + f];
if (2 == s) for (f = i; f < n; f++) t[l + f] = a[o + f];
if (3 == s)
for (f = i; f < n; f++) t[l + f] = (a[o + f] - (a[o + f - i] >> 1) + 256) & 255;
if (4 == s)
for (f = i; f < n; f++)
t[l + f] = (a[o + f] - h(a[o + f - i], 0, 0) + 256) & 255;
} else {
if (2 == s)
for (f = 0; f < n; f++) t[l + f] = (a[o + f] + 256 - a[o + f - n]) & 255;
if (3 == s) {
for (f = 0; f < i; f++) t[l + f] = (a[o + f] + 256 - (a[o + f - n] >> 1)) & 255;
for (f = i; f < n; f++)
t[l + f] = (a[o + f] + 256 - ((a[o + f - n] + a[o + f - i]) >> 1)) & 255;
}
if (4 == s) {
for (f = 0; f < i; f++)
t[l + f] = (a[o + f] + 256 - h(0, a[o + f - n], 0)) & 255;
for (f = i; f < n; f++)
t[l + f] =
(a[o + f] + 256 - h(a[o + f - i], a[o + f - n], a[o + f - i - n])) & 255;
}
}
}),
(e.crc = {
table: (function() {
for (var e = new Uint32Array(256), t = 0; t < 256; t++) {
for (var a = t, r = 0; r < 8; r++)
1 & a ? (a = 3988292384 ^ (a >>> 1)) : (a >>>= 1);
e[t] = a;
}
return e;
})(),
update: function(t, a, r, n) {
for (var i = 0; i < n; i++) t = e.crc.table[255 & (t ^ a[r + i])] ^ (t >>> 8);
return t;
},
crc: function(t, a, r) {
return 4294967295 ^ e.crc.update(4294967295, t, a, r);
}
}),
(e.quantize = function(t, a, r) {
for (var n = [], i = 0, s = 0; s < t.length; s++)
n.push(e.encode.alphaMul(new Uint8Array(t[s]), r)), (i += t[s].byteLength);
var o = new Uint8Array(i),
l = new Uint32Array(o.buffer),
h = 0;
for (s = 0; s < n.length; s++) {
for (var f = n[s], d = f.length, u = 0; u < d; u++) o[h + u] = f[u];
h += d;
}
var _ = {
i0: 0,
i1: o.length,
bst: null,
est: null,
tdst: 0,
left: null,
right: null
};
(_.bst = e.quantize.stats(o, _.i0, _.i1)), (_.est = e.quantize.estats(_.bst));
for (var c = [_]; c.length < a; ) {
var g = 0,
b = 0;
for (s = 0; s < c.length; s++) c[s].est.L > g && ((g = c[s].est.L), (b = s));
if (g < 0.001) break;
var w = c[b],
v = e.quantize.splitPixels(o, l, w.i0, w.i1, w.est.e, w.est.eMq255),
p = {i0: w.i0, i1: v, bst: null, est: null, tdst: 0, left: null, right: null};
(p.bst = e.quantize.stats(o, p.i0, p.i1)), (p.est = e.quantize.estats(p.bst));
var m = {
i0: v,
i1: w.i1,
bst: null,
est: null,
tdst: 0,
left: null,
right: null
};
for (m.bst = {R: [], m: [], N: w.bst.N - p.bst.N}, s = 0; s < 16; s++)
m.bst.R[s] = w.bst.R[s] - p.bst.R[s];
for (s = 0; s < 4; s++) m.bst.m[s] = w.bst.m[s] - p.bst.m[s];
(m.est = e.quantize.estats(m.bst)),
(w.left = p),
(w.right = m),
(c[b] = p),
c.push(m);
}
c.sort(function(e, t) {
return t.bst.N - e.bst.N;
});
for (var k = 0; k < n.length; k++) {
var y = e.quantize.planeDst,
x = new Uint8Array(n[k].buffer),
z = new Uint32Array(n[k].buffer),
A = x.length;
for (s = 0; s < A; s += 4) {
for (
var B = x[s] * (1 / 255),
S = x[s + 1] * (1 / 255),
U = x[s + 2] * (1 / 255),
E = x[s + 3] * (1 / 255),
R = _;
R.left;

)
R = y(R.est, B, S, U, E) <= 0 ? R.left : R.right;
z[s >> 2] = R.est.rgba;
}
n[k] = z.buffer;
}
return {bufs: n, plte: c};
}),
(e.quantize.getNearest = function(t, a, r, n, i) {
if (null == t.left) return (t.tdst = e.quantize.dist(t.est.q, a, r, n, i)), t;
var s = e.quantize.planeDst(t.est, a, r, n, i),
o = t.left,
l = t.right;
s > 0 && ((o = t.right), (l = t.left));
var h = e.quantize.getNearest(o, a, r, n, i);
if (h.tdst <= s * s) return h;
var f = e.quantize.getNearest(l, a, r, n, i);
return f.tdst < h.tdst ? f : h;
}),
(e.quantize.planeDst = function(e, t, a, r, n) {
var i = e.e;
return i[0] * t + i[1] * a + i[2] * r + i[3] * n - e.eMq;
}),
(e.quantize.dist = function(e, t, a, r, n) {
var i = t - e[0],
s = a - e[1],
o = r - e[2],
l = n - e[3];
return i * i + s * s + o * o + l * l;
}),
(e.quantize.splitPixels = function(t, a, r, n, i, s) {
var o = e.quantize.vecDot;
for (n -= 4; r < n; ) {
for (; o(t, r, i) <= s; ) r += 4;
for (; o(t, n, i) > s; ) n -= 4;
if (r >= n) break;
var l = a[r >> 2];
(a[r >> 2] = a[n >> 2]), (a[n >> 2] = l), (r += 4), (n -= 4);
}
for (; o(t, r, i) > s; ) r -= 4;
return r + 4;
}),
(e.quantize.vecDot = function(e, t, a) {
return e[t] * a[0] + e[t + 1] * a[1] + e[t + 2] * a[2] + e[t + 3] * a[3];
}),
(e.quantize.stats = function(e, t, a) {
for (
var r = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
n = [0, 0, 0, 0],
i = (a - t) >> 2,
s = t;
s < a;
s += 4
) {
var o = e[s] * (1 / 255),
l = e[s + 1] * (1 / 255),
h = e[s + 2] * (1 / 255),
f = e[s + 3] * (1 / 255);
(n[0] += o),
(n[1] += l),
(n[2] += h),
(n[3] += f),
(r[0] += o * o),
(r[1] += o * l),
(r[2] += o * h),
(r[3] += o * f),
(r[5] += l * l),
(r[6] += l * h),
(r[7] += l * f),
(r[10] += h * h),
(r[11] += h * f),
(r[15] += f * f);
}
return (
(r[4] = r[1]),
(r[8] = r[2]),
(r[12] = r[3]),
(r[9] = r[6]),
(r[13] = r[7]),
(r[14] = r[11]),
{R: r, m: n, N: i}
);
}),
(e.quantize.estats = function(t) {
var a = t.R,
r = t.m,
n = t.N,
i = r[0],
s = r[1],
o = r[2],
l = r[3],
h = 0 == n ? 0 : 1 / n,
f = [
a[0] - i * i * h,
a[1] - i * s * h,
a[2] - i * o * h,
a[3] - i * l * h,
a[4] - s * i * h,
a[5] - s * s * h,
a[6] - s * o * h,
a[7] - s * l * h,
a[8] - o * i * h,
a[9] - o * s * h,
a[10] - o * o * h,
a[11] - o * l * h,
a[12] - l * i * h,
a[13] - l * s * h,
a[14] - l * o * h,
a[15] - l * l * h
],
d = f,
u = e.M4,
_ = [0.5, 0.5, 0.5, 0.5],
c = 0,
g = 0;
if (0 != n)
for (
var b = 0;
b < 10 &&
((_ = u.multVec(d, _)),
(g = Math.sqrt(u.dot(_, _))),
(_ = u.sml(1 / g, _)),
!(Math.abs(g - c) < 1e-9));
b++
)
c = g;
var w = [i * h, s * h, o * h, l * h],
v = u.dot(u.sml(255, w), _),
p = w[3] < 0.001 ? 0 : 1 / w[3];
return {
Cov: f,
q: w,
e: _,
L: c,
eMq255: v,
eMq: u.dot(_, w),
rgba:
((Math.round(255 * w[3]) << 24) |
(Math.round(255 * w[2] * p) << 16) |
(Math.round(255 * w[1] * p) << 8) |
(Math.round(255 * w[0] * p) << 0)) >>>
0
};
}),
(e.M4 = {
multVec: function(e, t) {
return [
e[0] * t[0] + e[1] * t[1] + e[2] * t[2] + e[3] * t[3],
e[4] * t[0] + e[5] * t[1] + e[6] * t[2] + e[7] * t[3],
e[8] * t[0] + e[9] * t[1] + e[10] * t[2] + e[11] * t[3],
e[12] * t[0] + e[13] * t[1] + e[14] * t[2] + e[15] * t[3]
];
},
dot: function(e, t) {
return e[0] * t[0] + e[1] * t[1] + e[2] * t[2] + e[3] * t[3];
},
sml: function(e, t) {
return [e * t[0], e * t[1], e * t[2], e * t[3]];
}
}),
(e.encode.alphaMul = function(e, t) {
for (var a = new Uint8Array(e.length), r = e.length >> 2, n = 0; n < r; n++) {
var i = n << 2,
s = e[i + 3];
t && (s = s < 128 ? 0 : 255);
var o = s * (1 / 255);
(a[i + 0] = e[i + 0] * o),
(a[i + 1] = e[i + 1] * o),
(a[i + 2] = e[i + 2] * o),
(a[i + 3] = s);
}
return a;
});
})(t, Ya);
}),
Va = {
downloadAsImage: function(e, t, a, r) {
let n = t.width,
i = t.height,
s = new Uint8Array(n * i * 4);
if ((e.readRenderTargetPixels(t, 0, 0, n, i, s), !r))
for (var o = 3; o < s.length; o += 4) s[o] = 255;
!(function(e, t, a) {
let r = document.createElement("a");
if (void 0 === window)
throw "following download won't work, for some reason window is not defined.";
let n = new Blob([e], {type: "application/octet-stream"});
if (
((r.href = window.URL.createObjectURL(n)),
(r.download = t + "." + a),
document.createEvent)
) {
let e = document.createEvent("MouseEvents");
e.initEvent("click", !0, !0), r.dispatchEvent(e);
} else r.click();
})(
(function(e, t, a) {
return Xa.encode([e.buffer], t, a, 0);
})(
(function(e, t, a) {
for (var r = new Uint8Array(t * a * 4), n = 0; n < t; ++n)
for (var i = 0; i < a; ++i) {
var s = 4 * (n + i * t),
o = 4 * (n + (a - i - 1) * t);
(r[s] = e[o]),
(r[s + 1] = e[o + 1]),
(r[s + 2] = e[o + 2]),
(r[s + 3] = e[o + 3]);
}
return r;
})(s, n, i),
n,
i
),
a,
"png"
);
},
downloadTextureAsImage: function(t, a, r, n) {
let i = new e.Scene(),
s = new e.OrthographicCamera(-1, 1, 1, -1, 0, 1),
o = new e.ShaderMaterial({
vertexShader: [
"varying vec2 vUv;",
"",
"void main() {",
"    vUv = uv;",
"    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);",
"}"
].join("\n"),
fragmentShader: [
"varying vec2 vUv;",
"",
"uniform sampler2D texture_AOR;",
"",
"void main() {",
"    gl_FragColor = texture2D(texture_AOR, vUv).rgba;",
"}"
].join("\n"),
uniforms: {texture: {value: a}}
});
i.add(new e.Mesh(new e.PlaneGeometry(2, 2), o));
let l = new e.WebGLRenderTarget(a.image.width, a.image.height);
t.render(i, s, l), Va.downloadAsImage(t, l, r, n);
}
};
return (e.DebugRenderTarget = Va), Va;
});
